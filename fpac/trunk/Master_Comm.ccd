: 5_0
3 JUMP ;
: 5_5

1 LINE.NUM
  10    DELAY
0 JUMP ;
: 5_9

1 LINE.NUM
  *Master_Handle   ACCEPT
  ^MasterCommEstablished @! 
40 JUMP ;
: 5_12

1 LINE.NUM
  10    DELAY
0 JUMP ;
: 5_15

1 LINE.NUM
  *Master_Handle   LISTEN
  ^ListeningForMaster @! 
39 JUMP ;
: 5_20

1 LINE.NUM
  *Master_Handle   ?STREAM.KEY
  ^Master_Handle_CharNumWaiting @! 
40 JUMP ;
: 5_22

1 LINE.NUM
  10    DELAY
-2 JUMP ;
: 5_29

1 LINE.NUM
  *Master_Handle   CLOSE
  ^Master_CommClosed @! 
-4 JUMP ;
: 5_34

1 LINE.NUM
  *MasterCommand 
  *Master_Handle   GET$
  ^MasterCommandStringRcvd @! 

2 LINE.NUM
  0  
  ^indexStep @!   
39 JUMP ;
: 5_41

1 LINE.NUM
  10    DELAY
25 JUMP ;
: 5_60

1 LINE.NUM
  *Master_Handle   STREAM.CLEAR.BUF
-4 JUMP ;
: 5_69

1 LINE.NUM
  120.0  
  ^Timer_GetChar   SetTimer

2 LINE.NUM
  ^Timer_GetChar   StartTimer
-7 JUMP ;
: 5_94

1 LINE.NUM
  ^Heartbeat_Timer   StopTimer

2 LINE.NUM
  ^Heartbeat_Timer @@F 
  ^PriorHeartbeatTime F@!   

3 LINE.NUM
  90.0  
  ^Heartbeat_Timer   SetTimer

4 LINE.NUM
  ^Heartbeat_Timer   StartTimer
11 JUMP ;
: 5_108

1 LINE.NUM
  " DATETIME" 
 
  ^indexStep @@ 
  *MasterCommand   FindSubString
  ^MasterCommandStringRcvd @! 
38 JUMP ;
: 5_112
17 JUMP ;
: 5_115

1 LINE.NUM
  " RESET" 
 
  ^indexStep @@ 
  *MasterCommand   FindSubString
  ^MasterCommandStringRcvd @! 
37 JUMP ;
: 5_119
16 JUMP ;
: 5_122

1 LINE.NUM
  " FAULTS" 
 
  ^indexStep @@ 
  *MasterCommand   FindSubString
  ^MasterCommandStringRcvd @! 
36 JUMP ;
: 5_126
15 JUMP ;
: 5_127

1 LINE.NUM
  " STATE" 
 
  ^indexStep @@ 
  *MasterCommand   FindSubString
  ^MasterCommandStringRcvd @! 
35 JUMP ;
: 5_131
9 JUMP ;
: 5_140
1 LINE.NUM " STATUS=True, ICDVersion=" *StatusString  $MOVE 
2 LINE.NUM *ICDVersion *StatusString $CAT 

3 LINE.NUM " , FWVersion=" *StatusString $CAT 

4 LINE.NUM *FWVersion *StatusString $CAT 

5 LINE.NUM " , SWVersion=" *StatusString $CAT 

6 LINE.NUM *SWVersion *StatusString $CAT 

8 LINE.NUM " , DateDMY:TimeHMS$=" *StatusString $CAT 

9 LINE.NUM *DateString  -1 DATE>$ 
10 LINE.NUM *DateString *StatusString $CAT 

11 LINE.NUM " :" *StatusString $CAT 

12 LINE.NUM *TimeString  TIME>$ 
13 LINE.NUM *TimeString *StatusString $CAT 

15 LINE.NUM " , SystemUpTime=" *StatusString $CAT 

16 LINE.NUM  GetSystemTime I>F  10 0 *ElapsedString  FF.R$ 
17 LINE.NUM *ElapsedString *StatusString $CAT 

19 LINE.NUM " , HeartBeatDownTimer=" *StatusString $CAT 

20 LINE.NUM ^Heartbeat_Timer @@F 4 1 *ElapsedString  FF.R$ 
21 LINE.NUM *ElapsedString *StatusString $CAT 

23 LINE.NUM " , EnclosureFanSwitch=" *StatusString $CAT 

24 LINE.NUM ^FanSwMode @@ 2 = IF 
25 LINE.NUM " AUTO" *StatusString $CAT 

26 LINE.NUM ELSE 
26 LINE.NUM ^FanSwMode @@ 1 = IF 
27 LINE.NUM " ON" *StatusString $CAT 

28 LINE.NUM ELSE 
28 LINE.NUM ^FanSwMode @@ 0 = IF 
29 LINE.NUM " STOP" *StatusString $CAT 

30 LINE.NUM ELSE 
31 LINE.NUM " FAULT" *StatusString $CAT 

32 LINE.NUM THEN THEN THEN 
34 LINE.NUM *StatusString *EnviroString  $MOVE 
36 LINE.NUM " , MainsVoltage=" *EnviroString $CAT 

37 LINE.NUM ~UTILITY_SEN @@ 5 I>F F>= IF 
38 LINE.NUM ~UTILITY_SEN @@ 4 0 *EnviroTemp  FF.R$ 
39 LINE.NUM ELSE 
40 LINE.NUM " NaN" *EnviroTemp  $MOVE 
41 LINE.NUM THEN 
42 LINE.NUM *EnviroTemp *EnviroString $CAT 

43 LINE.NUM " , RedLightVoltage=" *EnviroString $CAT 

44 LINE.NUM ~RED_LT_SEN @@ 5 I>F F>= IF 
45 LINE.NUM ~RED_LT_SEN @@ 4 0 *EnviroTemp  FF.R$ 
46 LINE.NUM ELSE 
47 LINE.NUM " NaN" *EnviroTemp  $MOVE 
48 LINE.NUM THEN 
49 LINE.NUM *EnviroTemp *EnviroString $CAT 

50 LINE.NUM " , UPSVoltage=" *EnviroString $CAT 

51 LINE.NUM ~UPS_SENSE @@ 5 I>F F>= IF 
52 LINE.NUM ~UPS_SENSE @@ 4 0 *EnviroTemp  FF.R$ 
53 LINE.NUM ELSE 
54 LINE.NUM " NaN" *EnviroTemp  $MOVE 
55 LINE.NUM THEN 
56 LINE.NUM *EnviroTemp *EnviroString $CAT 

57 LINE.NUM " , DCSVoltage=" *EnviroString $CAT 

58 LINE.NUM ~DCS_SENSE @@ 5 I>F F>= IF 
59 LINE.NUM ~DCS_SENSE @@ 4 0 *EnviroTemp  FF.R$ 
60 LINE.NUM ELSE 
61 LINE.NUM " NaN" *EnviroTemp  $MOVE 
62 LINE.NUM THEN 
63 LINE.NUM *EnviroTemp *EnviroString $CAT 

64 LINE.NUM " , RollBrakePressure=" *EnviroString $CAT 

65 LINE.NUM ~ROLL_BRK_PRES @@ 5 1 *EnviroTemp  FF.R$ 
66 LINE.NUM *EnviroTemp *EnviroString $CAT 

67 LINE.NUM " , PitchBrakePressure=" *EnviroString $CAT 

68 LINE.NUM ~PITCH_BRK_PRES @@ 5 1 *EnviroTemp  FF.R$ 
69 LINE.NUM *EnviroTemp *EnviroString $CAT 

71 LINE.NUM " , PanelIntake1Tac=0" *EnviroString $CAT 

77 LINE.NUM " , EncFan1Tac=" *EnviroString $CAT 

78 LINE.NUM ~M6_3_CTRL @@ 10 I>F F* 4 0 *EnviroTemp  FF.R$ 
79 LINE.NUM *EnviroTemp *EnviroString $CAT 

80 LINE.NUM " , EncFan2Tac=" *EnviroString $CAT 

81 LINE.NUM ~M6_5_CTRL @@ 10 I>F F* 4 0 *EnviroTemp  FF.R$ 
82 LINE.NUM *EnviroTemp *EnviroString $CAT 

83 LINE.NUM " , EncFan3Tac=" *EnviroString $CAT 

84 LINE.NUM ~M6_7_CTRL @@ 10 I>F F* 4 0 *EnviroTemp  FF.R$ 
85 LINE.NUM *EnviroTemp *EnviroString $CAT 

92 LINE.NUM " , PanelFan1Tac=" *EnviroString $CAT 

93 LINE.NUM ~Cabinet_FAN @@ 1.420000e+000 F/ 4 0 *EnviroTemp  FF.R$ 
94 LINE.NUM *EnviroTemp *EnviroString $CAT 

95 LINE.NUM " , PanelAirTemp=" *EnviroString $CAT 

96 LINE.NUM ~PanelAir @@ 4 1 *EnviroTemp  FF.R$ 
97 LINE.NUM *EnviroTemp *EnviroString $CAT 

98 LINE.NUM " , DomeExitAirTemp=" *EnviroString $CAT 

99 LINE.NUM ~DomeExitAir @@ 4 1 *EnviroTemp  FF.R$ 
100 LINE.NUM *EnviroTemp *EnviroString $CAT 

101 LINE.NUM ~S30_7_NO @@I 1 = IF 
102 LINE.NUM " , HVACSwitchState=AUTO" *EnviroString $CAT 

103 LINE.NUM ELSE 
104 LINE.NUM " , HVACSwitchState=STOP" *EnviroString $CAT 

105 LINE.NUM THEN 
106 LINE.NUM ~HVAC_CTRL @@I 1 = IF 
107 LINE.NUM " , HVACOn=TRUE" *EnviroString $CAT 

108 LINE.NUM ELSE 
109 LINE.NUM " , HVACOn=FALSE" *EnviroString $CAT 

110 LINE.NUM THEN 
112 LINE.NUM ~S26_7 @@I 1 = IF 
113 LINE.NUM " , DoorRedTrapKeySecured=TRUE" *EnviroString $CAT 

114 LINE.NUM ELSE 
115 LINE.NUM " , DoorRedTrapKeySecured=FALSE" *EnviroString $CAT 

116 LINE.NUM THEN 
118 LINE.NUM ~S26_4_1 @@I 1 = IF 
119 LINE.NUM " , GoFastButton=TRUE" *EnviroString $CAT 

120 LINE.NUM ELSE 
121 LINE.NUM " , GoFastButton=FALSE" *EnviroString $CAT 

122 LINE.NUM THEN 
124 LINE.NUM ~S26_4 @@I 1 = IF 
125 LINE.NUM " , PanelRedTrapKeySecured=FALSE" *EnviroString $CAT 

126 LINE.NUM ELSE 
127 LINE.NUM " , PanelRedTrapKeySecured=TRUE" *EnviroString $CAT 

128 LINE.NUM THEN 
130 LINE.NUM ~S26_4_1 @@I 1 = ~S26_4 @@I 1 <> LOR  ~S26_7 @@I 1 = LOR  IF 
131 LINE.NUM " , GoFastState=TRUE" *EnviroString $CAT 

132 LINE.NUM ELSE 
133 LINE.NUM " , GoFastState=FALSE" *EnviroString $CAT 

134 LINE.NUM THEN 
136 LINE.NUM ~S33_3_NO @@I 1 = IF 
137 LINE.NUM " , LadderStowed=FALSE" *EnviroString $CAT 

138 LINE.NUM ELSE 
139 LINE.NUM " , LadderStowed=TRUE" *EnviroString $CAT 

140 LINE.NUM THEN 
142 LINE.NUM ~B32_2 @@I 0 = IF 
143 LINE.NUM " , EnclosureDoor1Closed=FALSE, EnclosureDoor2Closed=FALSE" *EnviroString $CAT 

144 LINE.NUM ELSE 
145 LINE.NUM " , EnclosureDoor1Closed=TRUE, EnclosureDoor2Closed=TRUE" *EnviroString $CAT 

146 LINE.NUM THEN 
153 LINE.NUM ~RED_LT_SEN @@ 110 I>F F> IF 
154 LINE.NUM " , RedLightSwitchOn=TRUE" *EnviroString $CAT 

155 LINE.NUM " , RedLightState=TRUE" *EnviroString $CAT 

156 LINE.NUM ELSE 
157 LINE.NUM " , RedLightSwitchON=FALSE" *EnviroString $CAT 

158 LINE.NUM " , RedLightState=FALSE" *EnviroString $CAT 

159 LINE.NUM THEN 
160 LINE.NUM ~S30_7_1 @@I 1 = IF 
161 LINE.NUM " , PanelDoorClosed=FALSE" *EnviroString $CAT 

162 LINE.NUM ELSE 
163 LINE.NUM " , PanelDoorClosed=TRUE" *EnviroString $CAT 

164 LINE.NUM THEN 
165 LINE.NUM ~S33_1_STATUS @@I 1 = IF 
166 LINE.NUM " , WhiteLightSwitchOn=TRUE" *EnviroString $CAT 

167 LINE.NUM ELSE 
168 LINE.NUM " , WhiteLightSwitchOn=FALSE" *EnviroString $CAT 

169 LINE.NUM THEN 
170 LINE.NUM ^whiteLightState @@ 1 = IF 
171 LINE.NUM " , WhiteLightState=TRUE" *EnviroString $CAT 

172 LINE.NUM ELSE 
173 LINE.NUM " , WhiteLightState=FALSE" *EnviroString $CAT 

174 LINE.NUM THEN 
177 LINE.NUM ^PanelGrnFlag @@ 1 = ^PanelRedFlag @@ 0 = LAND  IF 
178 LINE.NUM " , PanelLedColor=Green" *EnviroString $CAT 

179 LINE.NUM ELSE 
179 LINE.NUM ^PanelGrnFlag @@ 0 = ^PanelRedFlag @@ 1 = LAND  IF 
180 LINE.NUM " , PanelLedColor=Red" *EnviroString $CAT 

181 LINE.NUM ELSE 
181 LINE.NUM ^PanelGrnFlag @@ 1 = ^PanelRedFlag @@ 1 = LAND  IF 
182 LINE.NUM " , PanelLedColor=Yellow" *EnviroString $CAT 

183 LINE.NUM ELSE 
184 LINE.NUM " , PanelLedColor=OFF" *EnviroString $CAT 

185 LINE.NUM THEN THEN THEN 
187 LINE.NUM ^Dim @@ 0 = IF 
188 LINE.NUM " , LedState=BRIGHT" *EnviroString $CAT 

189 LINE.NUM ELSE 
190 LINE.NUM " , LedState=DIM" *EnviroString $CAT 

191 LINE.NUM THEN 
193 LINE.NUM ^DoorGrnFlag @@ 1 = ^DoorRedFlag @@ 0 = LAND  IF 
194 LINE.NUM " , DoorLedColor=Green" *EnviroString $CAT 

195 LINE.NUM ELSE 
195 LINE.NUM ^DoorGrnFlag @@ 0 = ^DoorRedFlag @@ 1 = LAND  IF 
196 LINE.NUM " , DoorLedColor=Red" *EnviroString $CAT 

197 LINE.NUM ELSE 
197 LINE.NUM ^DoorGrnFlag @@ 1 = ^DoorRedFlag @@ 1 = LAND  IF 
198 LINE.NUM " , DoorLedColor=Yellow" *EnviroString $CAT 

199 LINE.NUM ELSE 
200 LINE.NUM " , DoorLedColor=OFF" *EnviroString $CAT 

201 LINE.NUM THEN THEN THEN 
203 LINE.NUM ~SONALERT @@I 1 = IF 
204 LINE.NUM " , SonalertState=TRUE" *EnviroString $CAT 

205 LINE.NUM ELSE 
206 LINE.NUM " , SonalertState=FALSE" *EnviroString $CAT 

207 LINE.NUM THEN 
208 LINE.NUM ^LEDsBlink @@ 1 = IF 
209 LINE.NUM " , LedMode=BLINK" *EnviroString $CAT 

210 LINE.NUM ELSE 
211 LINE.NUM " , LedMode=STEADY" *EnviroString $CAT 

212 LINE.NUM THEN 
214 LINE.NUM *EnviroString *SentString  $MOVE 
215 LINE.NUM *SentString *StatusString  $MOVE 
216 LINE.NUM *SentString *Master_Handle  PRT$ ^MasterXmitStatus @! 
217 LINE.NUM *MasterCommand *LastCommand  $MOVE 
218 LINE.NUM " " *MasterCommand  $MOVE 
3 JUMP ;
: 5_142

1 LINE.NUM
  " STATUS" 
 
  ^indexStep @@ 
  *MasterCommand   FindSubString
  ^MasterCommandStringRcvd @! 
33 JUMP ;
: 5_147

1 LINE.NUM
  *MasterCommand   $>Upper

2 LINE.NUM
  " ." 
 
  0  
  *MasterCommand   FindSubString
  ^MasterCommandStringRcvd @! 
35 JUMP ;
: 5_154
-20 JUMP ;
: 5_156
-21 JUMP ;
: 5_183
-22 JUMP ;
: 5_186
4 LINE.NUM 0 ^Response @! 
6 LINE.NUM " ENC_FANS_HI" ^indexStep @@ *MasterCommand  FindSubString ^Position @! 
7 LINE.NUM ^Position @@ -1 >= ^FanSwMode @@ 2 = LAND  IF 
8 LINE.NUM 10 I>F 2 I>F ~M6_3_CTRL  F!RAMP 
9 LINE.NUM 10 I>F 2 I>F ~M6_5_CTRL  F!RAMP 
10 LINE.NUM 10 I>F 2 I>F ~M6_7_CTRL  F!RAMP 
11 LINE.NUM 0 ~HVAC_CTRL @! 
12 LINE.NUM 0 ^HvacOn @! 
13 LINE.NUM 1 ^Response @! 
14 LINE.NUM THEN 
15 LINE.NUM " ENC_FANS_MED" ^indexStep @@ *MasterCommand  FindSubString ^Position @! 
16 LINE.NUM ^Position @@ -1 >= ^FanSwMode @@ 2 = LAND  IF 
17 LINE.NUM 7 I>F 2 I>F ~M6_3_CTRL  F!RAMP 
18 LINE.NUM 7 I>F 2 I>F ~M6_5_CTRL  F!RAMP 
19 LINE.NUM 7 I>F 2 I>F ~M6_7_CTRL  F!RAMP 
20 LINE.NUM 0 ~HVAC_CTRL @! 
21 LINE.NUM 0 ^HvacOn @! 
22 LINE.NUM 1 ^Response @! 
23 LINE.NUM THEN 
24 LINE.NUM " ENC_FANS_LOW" ^indexStep @@ *MasterCommand  FindSubString ^Position @! 
25 LINE.NUM ^Position @@ -1 >= ^FanSwMode @@ 2 = LAND  IF 
26 LINE.NUM 4 I>F 2 I>F ~M6_3_CTRL  F!RAMP 
27 LINE.NUM 4 I>F 2 I>F ~M6_5_CTRL  F!RAMP 
28 LINE.NUM 4 I>F 2 I>F ~M6_7_CTRL  F!RAMP 
29 LINE.NUM 0 ~HVAC_CTRL @! 
30 LINE.NUM 0 ^HvacOn @! 
32 LINE.NUM 1 ^Response @! 
33 LINE.NUM THEN 
34 LINE.NUM " ENC_FANS_OFF" ^indexStep @@ *MasterCommand  FindSubString ^Position @! 
35 LINE.NUM ^Position @@ -1 >= ^FanSwMode @@ 2 = LAND  IF 
36 LINE.NUM 0 I>F 4 I>F ~M6_3_CTRL  F!RAMP 
37 LINE.NUM 0 I>F 4 I>F ~M6_5_CTRL  F!RAMP 
38 LINE.NUM 0 I>F 4 I>F ~M6_7_CTRL  F!RAMP 
39 LINE.NUM 1 ~HVAC_CTRL @! 
40 LINE.NUM 0 ^HvacOn @! 
41 LINE.NUM 1 ^Response @! 
42 LINE.NUM THEN 
88 LINE.NUM " HVAC_ON" ^indexStep @@ *MasterCommand  FindSubString ^Position @! 
89 LINE.NUM ^Position @@ -1 >= IF 
90 LINE.NUM 1 ^HvacOn @! 
91 LINE.NUM 1 ^Response @! 
92 LINE.NUM THEN 
93 LINE.NUM " HVAC_OFF" ^indexStep @@ *MasterCommand  FindSubString ^Position @! 
94 LINE.NUM ^Position @@ -1 >= IF 
95 LINE.NUM 0 ^HvacOn @! 
96 LINE.NUM 1 ^Response @! 
97 LINE.NUM THEN 
99 LINE.NUM " PANEL_LIGHT_ENABLE" ^indexStep @@ *MasterCommand  FindSubString ^Position @! 
100 LINE.NUM ^Position @@ -1 >= IF 
101 LINE.NUM 1 ~LAMP_TEST @! 
102 LINE.NUM 1 ^Response @! 
103 LINE.NUM THEN 
104 LINE.NUM " PANEL_LIGHT_DISABLE" ^indexStep @@ *MasterCommand  FindSubString ^Position @! 
105 LINE.NUM ^Position @@ -1 >= IF 
106 LINE.NUM 0 ~LAMP_TEST @! 
107 LINE.NUM 1 ^Response @! 
108 LINE.NUM THEN 
110 LINE.NUM " PANEL_FANS_ON" ^indexStep @@ *MasterCommand  FindSubString ^Position @! 
111 LINE.NUM ^Position @@ -1 >= IF 
113 LINE.NUM 10 I>F 4 I>F ~CABINET_FAN_CTRL  F!RAMP 
114 LINE.NUM 1 ^Response @! 
115 LINE.NUM THEN 
116 LINE.NUM " PANEL_FANS_OFF" ^indexStep @@ *MasterCommand  FindSubString ^Position @! 
117 LINE.NUM ^Position @@ -1 >= IF 
119 LINE.NUM 0 I>F 4 I>F ~CABINET_FAN_CTRL  F!RAMP 
120 LINE.NUM 1 ^Response @! 
121 LINE.NUM THEN 
123 LINE.NUM " RED_LIGHT_ON" ^indexStep @@ *MasterCommand  FindSubString ^Position @! 
124 LINE.NUM ^Position @@ -1 >= IF 
125 LINE.NUM ~RED_LT_CTRL @@I LNOT  ~RED_LT_CTRL @! 
126 LINE.NUM 1 ^Response @! 
127 LINE.NUM THEN 
128 LINE.NUM " RED_LIGHT_OFF" ^indexStep @@ *MasterCommand  FindSubString ^Position @! 
129 LINE.NUM ^Position @@ -1 >= IF 
130 LINE.NUM ~RED_LT_CTRL @@I LNOT  ~RED_LT_CTRL @! 
131 LINE.NUM 1 ^Response @! 
132 LINE.NUM THEN 
133 LINE.NUM " RED_LIGHT_TOGGLE" ^indexStep @@ *MasterCommand  FindSubString ^Position @! 
134 LINE.NUM ^Position @@ -1 >= IF 
135 LINE.NUM ~RED_LT_CTRL @@I LNOT  ~RED_LT_CTRL @! 
136 LINE.NUM 1 ^Response @! 
137 LINE.NUM THEN 
139 LINE.NUM " WHITE_LIGHT_ON" ^indexStep @@ *MasterCommand  FindSubString ^Position @! 
140 LINE.NUM ^Position @@ -1 >= IF 
141 LINE.NUM 1 ^White_LT_Flag @! 
142 LINE.NUM 1 ^Response @! 
143 LINE.NUM THEN 
144 LINE.NUM " WHITE_LIGHT_OFF" ^indexStep @@ *MasterCommand  FindSubString ^Position @! 
145 LINE.NUM ^Position @@ -1 >= IF 
146 LINE.NUM 0 ^White_LT_Flag @! 
147 LINE.NUM 1 ^Response @! 
148 LINE.NUM THEN 
149 LINE.NUM " WHITE_LIGHT_TOGGLE" ^indexStep @@ *MasterCommand  FindSubString ^Position @! 
150 LINE.NUM ^Position @@ -1 >= IF 
151 LINE.NUM ^White_LT_Flag @@ LNOT  ^White_LT_Flag @! 
152 LINE.NUM 1 ^Response @! 
153 LINE.NUM THEN 
155 LINE.NUM " PANEL_LED_GREEN" ^indexStep @@ *MasterCommand  FindSubString ^Position @! 
156 LINE.NUM ^Position @@ -1 >= IF 
157 LINE.NUM 0 ^PanelRedFlag @! 
158 LINE.NUM 1 ^PanelGrnFlag @! 
159 LINE.NUM 1 ^Response @! 
160 LINE.NUM THEN 
161 LINE.NUM " PANEL_LED_YELLOW" ^indexStep @@ *MasterCommand  FindSubString ^Position @! 
162 LINE.NUM ^Position @@ -1 >= IF 
163 LINE.NUM 1 ^PanelRedFlag @! 
164 LINE.NUM 1 ^PanelGrnFlag @! 
165 LINE.NUM 1 ^Response @! 
166 LINE.NUM THEN 
167 LINE.NUM " PANEL_LED_RED" ^indexStep @@ *MasterCommand  FindSubString ^Position @! 
168 LINE.NUM ^Position @@ -1 >= IF 
169 LINE.NUM 1 ^PanelRedFlag @! 
170 LINE.NUM 0 ^PanelGrnFlag @! 
171 LINE.NUM 1 ^Response @! 
172 LINE.NUM THEN 
173 LINE.NUM " PANEL_LED_OFF" ^indexStep @@ *MasterCommand  FindSubString ^Position @! 
174 LINE.NUM ^Position @@ -1 >= IF 
175 LINE.NUM 0 ^PanelRedFlag @! 
176 LINE.NUM 0 ^PanelGrnFlag @! 
177 LINE.NUM 1 ^Response @! 
178 LINE.NUM THEN 
181 LINE.NUM " DOOR_LED_GREEN" ^indexStep @@ *MasterCommand  FindSubString ^Position @! 
182 LINE.NUM ^Position @@ -1 >= IF 
183 LINE.NUM 0 ^DoorRedFlag @! 
184 LINE.NUM 1 ^DoorGrnFlag @! 
185 LINE.NUM 1 ^Response @! 
186 LINE.NUM THEN 
188 LINE.NUM " DOOR_LED_YELLOW" ^indexStep @@ *MasterCommand  FindSubString ^Position @! 
189 LINE.NUM ^Position @@ -1 >= IF 
190 LINE.NUM 1 ^DoorRedFlag @! 
191 LINE.NUM 1 ^DoorGrnFlag @! 
192 LINE.NUM 1 ^Response @! 
193 LINE.NUM THEN 
194 LINE.NUM " DOOR_LED_RED" ^indexStep @@ *MasterCommand  FindSubString ^Position @! 
195 LINE.NUM ^Position @@ -1 >= IF 
196 LINE.NUM 1 ^DoorRedFlag @! 
197 LINE.NUM 0 ^DoorGrnFlag @! 
198 LINE.NUM 1 ^Response @! 
199 LINE.NUM THEN 
200 LINE.NUM " DOOR_LED_OFF" ^indexStep @@ *MasterCommand  FindSubString ^Position @! 
201 LINE.NUM ^Position @@ -1 >= IF 
202 LINE.NUM 0 ^DoorRedFlag @! 
203 LINE.NUM 0 ^DoorGrnFlag @! 
204 LINE.NUM 1 ^Response @! 
205 LINE.NUM THEN 
206 LINE.NUM " LED_BRIGHT" ^indexStep @@ *MasterCommand  FindSubString ^Position @! 
207 LINE.NUM ^Position @@ -1 >= IF 
208 LINE.NUM 0 ^Dim @! 
209 LINE.NUM 1 ^Response @! 
210 LINE.NUM THEN 
211 LINE.NUM " LED_DIM" ^indexStep @@ *MasterCommand  FindSubString ^Position @! 
212 LINE.NUM ^Position @@ -1 >= IF 
213 LINE.NUM 1 ^Dim @! 
214 LINE.NUM 1 ^Response @! 
215 LINE.NUM THEN 
217 LINE.NUM " LED_BLINK" ^indexStep @@ *MasterCommand  FindSubString ^Position @! 
218 LINE.NUM ^Position @@ -1 >= IF 
219 LINE.NUM 1 ^LEDsBlink @! 
220 LINE.NUM 1 ^Response @! 
221 LINE.NUM THEN 
222 LINE.NUM " LED_STEADY" ^indexStep @@ *MasterCommand  FindSubString ^Position @! 
223 LINE.NUM ^Position @@ -1 >= IF 
224 LINE.NUM 0 ^LEDsBlink @! 
225 LINE.NUM 1 ^Response @! 
226 LINE.NUM THEN 
229 LINE.NUM " SON_ALERT_ON" ^indexStep @@ *MasterCommand  FindSubString ^Position @! 
230 LINE.NUM ^Position @@ -1 >= IF 
231 LINE.NUM 1 ~SONALERT @! 
232 LINE.NUM 1 ^Response @! 
233 LINE.NUM THEN 
234 LINE.NUM " SON_ALERT_OFF" ^indexStep @@ *MasterCommand  FindSubString ^Position @! 
235 LINE.NUM ^Position @@ -1 >= IF 
236 LINE.NUM 0 ~SONALERT @! 
237 LINE.NUM 1 ^Response @! 
238 LINE.NUM THEN 
240 LINE.NUM ^Response @@ 1 = IF 
241 LINE.NUM " TRUE" *SentString  $MOVE 
243 LINE.NUM ELSE 
244 LINE.NUM " FALSE" *SentString  $MOVE 
246 LINE.NUM THEN 
247 LINE.NUM *SentString *Master_Handle  PRT$ ^MasterXmitStatus @! 
248 LINE.NUM *MasterCommand *LastCommand  $MOVE 
249 LINE.NUM " " *MasterCommand  $MOVE 
-2 JUMP ;
: 5_193
2 JUMP ;
: 5_197

1 LINE.NUM
  " ENVIRO" 
 
  ^indexStep @@ 
  *MasterCommand   FindSubString
  ^MasterCommandStringRcvd @! 
28 JUMP ;
: 5_200
-26 JUMP ;
: 5_201
-27 JUMP ;
: 5_205
-28 JUMP ;
: 5_206
-29 JUMP ;
: 5_207
-30 JUMP ;
: 5_214
-31 JUMP ;
: 5_292

1 LINE.NUM
  " HEARTBEAT" 
 
  ^indexStep @@ 
  *MasterCommand   FindSubString
  ^MasterCommandStringRcvd @! 
20 JUMP ;
: 5_297

1 LINE.NUM
  " ," 
 
  0  
  *MasterCommand   FindSubString
  ^MasterCommandStringRcvd @! 
22 JUMP ;
: 5_299

1 LINE.NUM
  1  
  ^indexStep @!   
-3 JUMP ;
: 5_310

1 LINE.NUM
  *Master_Handle   STREAM.CLEAR.BUF
23 JUMP ;
: 5_313

1 LINE.NUM
  *Master_Handle   STREAM.CLEAR.BUF
-18 JUMP ;
: 5_320

1 LINE.NUM
  *Master_Handle   CLOSE
  ^Master_CommClosed @! 
-35 JUMP ;
: 5_332

1 LINE.NUM
  120.0  
  ^Timer_GetChar   SetTimer

2 LINE.NUM
  ^Timer_GetChar   StartTimer
7 JUMP ;
: 5_7
FALSE

1 LINE.NUM
  ^MasterCommEstablished @@ 
  0    =
LOR

2 LINE.NUM
  ^MasterCommEstablished @@ 
  -47    =
LOR
IF -33 ELSE -43 THEN JUMP ;
: 5_14
FALSE

1 LINE.NUM
  ^ListeningForMaster @@ 
  0    =
LOR

2 LINE.NUM
  ^ListeningForMaster @@ 
  -47    =
LOR
IF -43 ELSE -42 THEN JUMP ;
: 5_17
TRUE

1 LINE.NUM
  ^Master_Handle_CharNumWaiting @@ 
  0    <
LAND
IF 1 ELSE -40 THEN JUMP ;
: 5_19
TRUE

1 LINE.NUM
  ^Master_Handle_CharNumWaiting @@ 
  0    >
LAND
IF -5 ELSE 4 THEN JUMP ;
: 5_25
FALSE

1 LINE.NUM
  ^Master_Handle_CharNumWaiting @@ 
  -37    =
LOR

2 LINE.NUM
  ^Master_Handle_CharNumWaiting @@ 
  -39    =
LOR
IF -42 ELSE -41 THEN JUMP ;
: 5_35
TRUE

1 LINE.NUM
  ^MasterCommandStringRcvd @@ 
  0    =
LAND
IF -9 ELSE 0 THEN JUMP ;
: 5_39
FALSE

1 LINE.NUM
  ^MasterCommandStringRcvd @@ 
  -37    =
LOR

2 LINE.NUM
  ^MasterCommandStringRcvd @@ 
  -39    =
LOR
IF -41 ELSE -40 THEN JUMP ;
: 5_66
TRUE

1 LINE.NUM
  ^Master_Handle_CharNumWaiting @@ 
  6    <
LAND
IF -41 ELSE -43 THEN JUMP ;
: 5_72
TRUE

1 LINE.NUM
  ^Timer_GetChar   T0=
LAND
IF -11 ELSE -7 THEN JUMP ;
: 5_110
TRUE

1 LINE.NUM
  ^MasterCommandStringRcvd @@ 
  -1    >
LAND
IF -39 ELSE -26 THEN JUMP ;
: 5_117
TRUE

1 LINE.NUM
  ^MasterCommandStringRcvd @@ 
  -1    >
LAND
IF -38 ELSE -41 THEN JUMP ;
: 5_124
TRUE

1 LINE.NUM
  ^MasterCommandStringRcvd @@ 
  -1    >
LAND
IF -37 ELSE -40 THEN JUMP ;
: 5_129
TRUE

1 LINE.NUM
  ^MasterCommandStringRcvd @@ 
  -1    >
LAND
IF -36 ELSE -34 THEN JUMP ;
: 5_139
TRUE

1 LINE.NUM
  ^MasterCommandStringRcvd @@ 
  -1    >
LAND
IF -36 ELSE -28 THEN JUMP ;
: 5_144
FALSE

1 LINE.NUM
  ^MasterCommandStringRcvd @@ 
  -1    >
LOR
IF -46 ELSE -39 THEN JUMP ;
: 5_195
TRUE

1 LINE.NUM
  ^MasterCommandStringRcvd @@ 
  -1    >
LAND
IF -31 ELSE -42 THEN JUMP ;
: 5_293
TRUE

1 LINE.NUM
  ^MasterCommandStringRcvd @@ 
  -1    >
LAND
IF -22 ELSE -23 THEN JUMP ;
: 5_300
TRUE

1 LINE.NUM
  ^MasterCommandStringRcvd @@ 
  -1    >
LAND
IF -23 ELSE -25 THEN JUMP ;
: 5_325
TRUE

1 LINE.NUM
  ^MasterCommandStringRcvd @@ 
  0    <=
LAND
IF 1 ELSE -22 THEN JUMP ;
: 5_330
TRUE

1 LINE.NUM
  *Master_Handle   ?OPEN 0>
LAND
IF 0 ELSE -56 THEN JUMP ;
T: T5
DUMMY
5_0
5_5
5_9
5_12
5_15
5_20
5_22
5_29
5_34
5_41
5_60
5_69
5_94
5_108
5_112
5_115
5_119
5_122
5_126
5_127
5_131
5_140
5_142
5_147
5_154
5_156
5_183
5_186
5_193
5_197
5_200
5_201
5_205
5_206
5_207
5_214
5_292
5_297
5_299
5_310
5_313
5_320
5_332
5_7
5_14
5_17
5_19
5_25
5_35
5_39
5_66
5_72
5_110
5_117
5_124
5_129
5_139
5_144
5_195
5_293
5_300
5_325
5_330
T;
&Master_Comm ' T5 SETTASK
