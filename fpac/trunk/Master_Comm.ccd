: 5_0
3 JUMP ;
: 5_5

1 LINE.NUM
  10    DELAY
0 JUMP ;
: 5_9

1 LINE.NUM
  *Master_Handle   ACCEPT
  ^MasterCommEstablished @! 
40 JUMP ;
: 5_12

1 LINE.NUM
  10    DELAY
0 JUMP ;
: 5_15

1 LINE.NUM
  *Master_Handle   LISTEN
  ^ListeningForMaster @! 
39 JUMP ;
: 5_20

1 LINE.NUM
  *Master_Handle   ?STREAM.KEY
  ^Master_Handle_CharNumWaiting @! 
40 JUMP ;
: 5_22

1 LINE.NUM
  10    DELAY
-2 JUMP ;
: 5_29

1 LINE.NUM
  *Master_Handle   CLOSE
  ^Master_CommClosed @! 
-4 JUMP ;
: 5_34

1 LINE.NUM
  *MasterCommand 
  *Master_Handle   GET$
  ^MasterCommandStringRcvd @! 

2 LINE.NUM
  0  
  ^indexStep @!   
39 JUMP ;
: 5_41

1 LINE.NUM
  10    DELAY
25 JUMP ;
: 5_60

1 LINE.NUM
  *Master_Handle   STREAM.CLEAR.BUF
-4 JUMP ;
: 5_69

1 LINE.NUM
  120.0  
  ^Timer_GetChar   SetTimer

2 LINE.NUM
  ^Timer_GetChar   StartTimer
-7 JUMP ;
: 5_94

1 LINE.NUM
  ^Heartbeat_Timer   StopTimer

2 LINE.NUM
  ^Heartbeat_Timer @@F 
  ^PriorHeartbeatTime F@!   

3 LINE.NUM
  90.0  
  ^Heartbeat_Timer   SetTimer

4 LINE.NUM
  ^Heartbeat_Timer   StartTimer
11 JUMP ;
: 5_108

1 LINE.NUM
  " DATETIME" 
 
  ^indexStep @@ 
  *MasterCommand   FindSubString
  ^MasterCommandStringRcvd @! 
38 JUMP ;
: 5_112
17 JUMP ;
: 5_115

1 LINE.NUM
  " RESET" 
 
  ^indexStep @@ 
  *MasterCommand   FindSubString
  ^MasterCommandStringRcvd @! 
37 JUMP ;
: 5_119
16 JUMP ;
: 5_122

1 LINE.NUM
  " FAULTS" 
 
  ^indexStep @@ 
  *MasterCommand   FindSubString
  ^MasterCommandStringRcvd @! 
36 JUMP ;
: 5_126
15 JUMP ;
: 5_127

1 LINE.NUM
  " STATE" 
 
  ^indexStep @@ 
  *MasterCommand   FindSubString
  ^MasterCommandStringRcvd @! 
35 JUMP ;
: 5_131
9 JUMP ;
: 5_140
1 LINE.NUM " STATUS=True, ICDVersion=" *StatusString  $MOVE 
2 LINE.NUM *ICDVersion *StatusString $CAT 

3 LINE.NUM " , FWVersion=" *StatusString $CAT 

4 LINE.NUM *FWVersion *StatusString $CAT 

5 LINE.NUM " , SWVersion=" *StatusString $CAT 

6 LINE.NUM *SWVersion *StatusString $CAT 

8 LINE.NUM " , DateDMY:TimeHMS$=" *StatusString $CAT 

9 LINE.NUM *DateString  -1 DATE>$ 
10 LINE.NUM *DateString *StatusString $CAT 

11 LINE.NUM " :" *StatusString $CAT 

12 LINE.NUM *TimeString  TIME>$ 
13 LINE.NUM *TimeString *StatusString $CAT 

15 LINE.NUM " , SystemUpTime=" *StatusString $CAT 

16 LINE.NUM  GetSystemTime I>F  10 0 *ElapsedString  FF.R$ 
17 LINE.NUM *ElapsedString *StatusString $CAT 

19 LINE.NUM " , HeartBeatDownTimer=" *StatusString $CAT 

20 LINE.NUM ^Heartbeat_Timer @@F 4 1 *ElapsedString  FF.R$ 
21 LINE.NUM *ElapsedString *StatusString $CAT 

23 LINE.NUM " , EnclosureFanSwitch=" *StatusString $CAT 

24 LINE.NUM ^FanSwMode @@ 2 = IF 
25 LINE.NUM " AUTO" *StatusString $CAT 

26 LINE.NUM ELSE 
26 LINE.NUM ^FanSwMode @@ 1 = IF 
27 LINE.NUM " ON" *StatusString $CAT 

28 LINE.NUM ELSE 
28 LINE.NUM ^FanSwMode @@ 0 = IF 
29 LINE.NUM " STOP" *StatusString $CAT 

30 LINE.NUM ELSE 
31 LINE.NUM " FAULT" *StatusString $CAT 

32 LINE.NUM THEN THEN THEN 
34 LINE.NUM *StatusString *EnviroString  $MOVE 
36 LINE.NUM " , MainsVoltage=" *EnviroString $CAT 

37 LINE.NUM ~UtilityVoltage @@ 5 I>F F>= IF 
38 LINE.NUM ~UtilityVoltage @@ 4 0 *EnviroTemp  FF.R$ 
39 LINE.NUM ELSE 
40 LINE.NUM " NaN" *EnviroTemp  $MOVE 
41 LINE.NUM THEN 
42 LINE.NUM *EnviroTemp *EnviroString $CAT 

44 LINE.NUM " , RedLightVoltage=" *EnviroString $CAT 

45 LINE.NUM ~RedLightVoltage @@ 5 I>F F>= IF 
46 LINE.NUM ~RedLightVoltage @@ 4 0 *EnviroTemp  FF.R$ 
47 LINE.NUM ELSE 
48 LINE.NUM " NaN" *EnviroTemp  $MOVE 
49 LINE.NUM THEN 
50 LINE.NUM *EnviroTemp *EnviroString $CAT 

51 LINE.NUM " , UPSVoltage=" *EnviroString $CAT 

52 LINE.NUM ~UPSvoltage @@ 5 I>F F>= IF 
53 LINE.NUM ~UPSvoltage @@ 4 0 *EnviroTemp  FF.R$ 
54 LINE.NUM ELSE 
55 LINE.NUM " NaN" *EnviroTemp  $MOVE 
56 LINE.NUM THEN 
57 LINE.NUM *EnviroTemp *EnviroString $CAT 

58 LINE.NUM " , DCSVoltage=" *EnviroString $CAT 

59 LINE.NUM ~DCSvoltage @@ 5 I>F F>= IF 
60 LINE.NUM ~DCSvoltage @@ 4 0 *EnviroTemp  FF.R$ 
61 LINE.NUM ELSE 
62 LINE.NUM " NaN" *EnviroTemp  $MOVE 
63 LINE.NUM THEN 
64 LINE.NUM *EnviroTemp *EnviroString $CAT 

65 LINE.NUM " , RollBrakePressure=" *EnviroString $CAT 

66 LINE.NUM ~RollBrakePressure @@ 5 1 *EnviroTemp  FF.R$ 
67 LINE.NUM *EnviroTemp *EnviroString $CAT 

68 LINE.NUM " , PitchBrakePressure=" *EnviroString $CAT 

69 LINE.NUM ~PitchBrakePressure @@ 5 1 *EnviroTemp  FF.R$ 
70 LINE.NUM *EnviroTemp *EnviroString $CAT 

72 LINE.NUM " , PanelIntake1Tac=0" *EnviroString $CAT 

78 LINE.NUM " , EncFan1Tac=" *EnviroString $CAT 

79 LINE.NUM ~WallFanM73_Ctrl @@ 10 I>F F* 4 0 *EnviroTemp  FF.R$ 
80 LINE.NUM *EnviroTemp *EnviroString $CAT 

81 LINE.NUM " , EncFan2Tac=" *EnviroString $CAT 

82 LINE.NUM ~WallFanM75_Ctrl @@ 10 I>F F* 4 0 *EnviroTemp  FF.R$ 
83 LINE.NUM *EnviroTemp *EnviroString $CAT 

84 LINE.NUM " , EncFan3Tac=" *EnviroString $CAT 

85 LINE.NUM ~WallFanM77_Ctrl @@ 10 I>F F* 4 0 *EnviroTemp  FF.R$ 
86 LINE.NUM *EnviroTemp *EnviroString $CAT 

93 LINE.NUM " , PanelFan1Tac=" *EnviroString $CAT 

94 LINE.NUM ~CabinetFanSpeed @@ 1.41999996e+000 F/ 4 0 *EnviroTemp  FF.R$ 
95 LINE.NUM *EnviroTemp *EnviroString $CAT 

96 LINE.NUM " , PanelAirTemp=" *EnviroString $CAT 

97 LINE.NUM ~CabinetTemp @@ 4 1 *EnviroTemp  FF.R$ 
98 LINE.NUM *EnviroTemp *EnviroString $CAT 

99 LINE.NUM " , DomeExitAirTemp=" *EnviroString $CAT 

100 LINE.NUM ~WallExitAirTemp @@ 4 1 *EnviroTemp  FF.R$ 
101 LINE.NUM *EnviroTemp *EnviroString $CAT 

103 LINE.NUM ~AzDriveAvailable @@I 1 = IF 
104 LINE.NUM " , AzimuthAvailable=TRUE" *EnviroString $CAT 

105 LINE.NUM ELSE 
106 LINE.NUM " , AzimuthAvailable=FALSE" *EnviroString $CAT 

107 LINE.NUM THEN 
108 LINE.NUM ~AirConOpMode_Auto @@I 1 = IF 
109 LINE.NUM " , HVACSwitchState=AUTO" *EnviroString $CAT 

110 LINE.NUM ELSE 
111 LINE.NUM " , HVACSwitchState=STOP" *EnviroString $CAT 

112 LINE.NUM THEN 
113 LINE.NUM ~AirCon_ON @@I 1 = IF 
114 LINE.NUM " , HVACOn=TRUE" *EnviroString $CAT 

115 LINE.NUM ELSE 
116 LINE.NUM " , HVACOn=FALSE" *EnviroString $CAT 

117 LINE.NUM THEN 
119 LINE.NUM ~GoFastOrEntryLockTrapped @@I 1 = IF 
120 LINE.NUM " , DoorRedTrapKeySecured=TRUE" *EnviroString $CAT 

121 LINE.NUM ELSE 
122 LINE.NUM " , DoorRedTrapKeySecured=FALSE" *EnviroString $CAT 

123 LINE.NUM THEN 
125 LINE.NUM ~GoFast @@I 1 = IF 
126 LINE.NUM " , GoFastButton=TRUE" *EnviroString $CAT 

127 LINE.NUM ELSE 
128 LINE.NUM " , GoFastButton=FALSE" *EnviroString $CAT 

129 LINE.NUM THEN 
131 LINE.NUM ~EntryDoorOverrideFree @@I 1 = IF 
132 LINE.NUM " , PanelRedTrapKeySecured=FALSE" *EnviroString $CAT 

133 LINE.NUM ELSE 
134 LINE.NUM " , PanelRedTrapKeySecured=TRUE" *EnviroString $CAT 

135 LINE.NUM THEN 
137 LINE.NUM ~GoFast @@I 1 = ~EntryDoorOverrideFree @@I 1 <> LOR  ~GoFastOrEntryLockTrapped @@I 1 = LOR  IF 
138 LINE.NUM " , GoFastState=TRUE" *EnviroString $CAT 

139 LINE.NUM ELSE 
140 LINE.NUM " , GoFastState=FALSE" *EnviroString $CAT 

141 LINE.NUM THEN 
143 LINE.NUM ~LadderFree @@I 1 = IF 
144 LINE.NUM " , LadderStowed=FALSE" *EnviroString $CAT 

145 LINE.NUM ELSE 
146 LINE.NUM " , LadderStowed=TRUE" *EnviroString $CAT 

147 LINE.NUM THEN 
149 LINE.NUM ~EntryDoorClosed @@I 0 = IF 
150 LINE.NUM " , EnclosureDoor1Closed=FALSE, EnclosureDoor2Closed=FALSE" *EnviroString $CAT 

151 LINE.NUM ELSE 
152 LINE.NUM " , EnclosureDoor1Closed=TRUE, EnclosureDoor2Closed=TRUE" *EnviroString $CAT 

153 LINE.NUM THEN 
160 LINE.NUM ~RedLightVoltage @@ 110 I>F F> IF 
161 LINE.NUM " , RedLightSwitchOn=TRUE" *EnviroString $CAT 

162 LINE.NUM " , RedLightState=TRUE" *EnviroString $CAT 

163 LINE.NUM ELSE 
164 LINE.NUM " , RedLightSwitchON=FALSE" *EnviroString $CAT 

165 LINE.NUM " , RedLightState=FALSE" *EnviroString $CAT 

166 LINE.NUM THEN 
167 LINE.NUM ~CabinetDoorOpen @@I 1 = IF 
168 LINE.NUM " , PanelDoorClosed=FALSE" *EnviroString $CAT 

169 LINE.NUM ELSE 
170 LINE.NUM " , PanelDoorClosed=TRUE" *EnviroString $CAT 

171 LINE.NUM THEN 
172 LINE.NUM ~WtLightSwitch @@I 1 = IF 
173 LINE.NUM " , WhiteLightSwitchOn=TRUE" *EnviroString $CAT 

174 LINE.NUM ELSE 
175 LINE.NUM " , WhiteLightSwitchOn=FALSE" *EnviroString $CAT 

176 LINE.NUM THEN 
185 LINE.NUM ^PanelGrnFlag @@ 1 = ^PanelRedFlag @@ 0 = LAND  IF 
186 LINE.NUM " , PanelLedColor=Green" *EnviroString $CAT 

187 LINE.NUM ELSE 
187 LINE.NUM ^PanelGrnFlag @@ 0 = ^PanelRedFlag @@ 1 = LAND  IF 
188 LINE.NUM " , PanelLedColor=Red" *EnviroString $CAT 

189 LINE.NUM ELSE 
189 LINE.NUM ^PanelGrnFlag @@ 1 = ^PanelRedFlag @@ 1 = LAND  IF 
190 LINE.NUM " , PanelLedColor=Yellow" *EnviroString $CAT 

191 LINE.NUM ELSE 
192 LINE.NUM " , PanelLedColor=OFF" *EnviroString $CAT 

193 LINE.NUM THEN THEN THEN 
195 LINE.NUM ^Dim @@ 0 = IF 
196 LINE.NUM " , LedState=BRIGHT" *EnviroString $CAT 

197 LINE.NUM ELSE 
198 LINE.NUM " , LedState=DIM" *EnviroString $CAT 

199 LINE.NUM THEN 
201 LINE.NUM ^DoorGrnFlag @@ 1 = ^DoorRedFlag @@ 0 = LAND  IF 
202 LINE.NUM " , DoorLedColor=Green" *EnviroString $CAT 

203 LINE.NUM ELSE 
203 LINE.NUM ^DoorGrnFlag @@ 0 = ^DoorRedFlag @@ 1 = LAND  IF 
204 LINE.NUM " , DoorLedColor=Red" *EnviroString $CAT 

205 LINE.NUM ELSE 
205 LINE.NUM ^DoorGrnFlag @@ 1 = ^DoorRedFlag @@ 1 = LAND  IF 
206 LINE.NUM " , DoorLedColor=Yellow" *EnviroString $CAT 

207 LINE.NUM ELSE 
208 LINE.NUM " , DoorLedColor=OFF" *EnviroString $CAT 

209 LINE.NUM THEN THEN THEN 
211 LINE.NUM ~Sonalert @@I 1 = IF 
212 LINE.NUM " , SonalertState=TRUE" *EnviroString $CAT 

213 LINE.NUM ELSE 
214 LINE.NUM " , SonalertState=FALSE" *EnviroString $CAT 

215 LINE.NUM THEN 
216 LINE.NUM ^LEDsBlink @@ 1 = IF 
217 LINE.NUM " , LedMode=BLINK" *EnviroString $CAT 

218 LINE.NUM ELSE 
219 LINE.NUM " , LedMode=STEADY" *EnviroString $CAT 

220 LINE.NUM THEN 
222 LINE.NUM " , ECBtripped=" *EnviroString $CAT 

223 LINE.NUM ~ECB_Status @@I IF 
224 LINE.NUM " TRUE" *EnviroTemp  $MOVE 
225 LINE.NUM ELSE 
226 LINE.NUM " FALSE" *EnviroTemp  $MOVE 
227 LINE.NUM THEN 
228 LINE.NUM *EnviroTemp *EnviroString $CAT 

231 LINE.NUM *EnviroString *SentString  $MOVE 
232 LINE.NUM *SentString *StatusString  $MOVE 
233 LINE.NUM *SentString *Master_Handle  PRT$ ^MasterXmitStatus @! 
234 LINE.NUM *MasterCommand *LastCommand  $MOVE 
235 LINE.NUM " " *MasterCommand  $MOVE 
3 JUMP ;
: 5_142

1 LINE.NUM
  " STATUS" 
 
  ^indexStep @@ 
  *MasterCommand   FindSubString
  ^MasterCommandStringRcvd @! 
33 JUMP ;
: 5_147

1 LINE.NUM
  *MasterCommand   $>Upper

2 LINE.NUM
  " ." 
 
  0  
  *MasterCommand   FindSubString
  ^MasterCommandStringRcvd @! 
35 JUMP ;
: 5_154
-20 JUMP ;
: 5_156
-21 JUMP ;
: 5_183
-22 JUMP ;
: 5_186
4 LINE.NUM 0 ^Response @! 
6 LINE.NUM " ENC_FANS_HI" ^indexStep @@ *MasterCommand  FindSubString ^Position @! 
7 LINE.NUM ^Position @@ -1 >= ^FanSwMode @@ 2 = LAND  IF 
8 LINE.NUM 10 I>F 2 I>F ~WallFanM73_Ctrl  F!RAMP 
9 LINE.NUM 10 I>F 2 I>F ~WallFanM75_Ctrl  F!RAMP 
10 LINE.NUM 10 I>F 2 I>F ~WallFanM77_Ctrl  F!RAMP 
11 LINE.NUM 10 ^TempFanSpeed @! 
13 LINE.NUM 0 ^HvacOn @! 
14 LINE.NUM 1 ^HvacFlag @! 
15 LINE.NUM 1 ^Response @! 
16 LINE.NUM THEN 
17 LINE.NUM " ENC_FANS_MED" ^indexStep @@ *MasterCommand  FindSubString ^Position @! 
18 LINE.NUM ^Position @@ -1 >= ^FanSwMode @@ 2 = LAND  IF 
19 LINE.NUM 7 I>F 2 I>F ~WallFanM73_Ctrl  F!RAMP 
20 LINE.NUM 7 I>F 2 I>F ~WallFanM75_Ctrl  F!RAMP 
21 LINE.NUM 7 I>F 2 I>F ~WallFanM77_Ctrl  F!RAMP 
22 LINE.NUM 7 ^TempFanSpeed @! 
24 LINE.NUM 0 ^HvacOn @! 
25 LINE.NUM 1 ^HvacFlag @! 
26 LINE.NUM 1 ^Response @! 
27 LINE.NUM THEN 
28 LINE.NUM " ENC_FANS_LOW" ^indexStep @@ *MasterCommand  FindSubString ^Position @! 
29 LINE.NUM ^Position @@ -1 >= ^FanSwMode @@ 2 = LAND  IF 
30 LINE.NUM 4 I>F 2 I>F ~WallFanM73_Ctrl  F!RAMP 
31 LINE.NUM 4 I>F 2 I>F ~WallFanM75_Ctrl  F!RAMP 
32 LINE.NUM 4 I>F 2 I>F ~WallFanM77_Ctrl  F!RAMP 
33 LINE.NUM 4 ^TempFanSpeed @! 
35 LINE.NUM 0 ^HvacOn @! 
36 LINE.NUM 1 ^HvacFlag @! 
37 LINE.NUM 1 ^Response @! 
38 LINE.NUM THEN 
39 LINE.NUM " ENC_FANS_OFF" ^indexStep @@ *MasterCommand  FindSubString ^Position @! 
40 LINE.NUM ^Position @@ -1 >= ^FanSwMode @@ 2 = LAND  IF 
41 LINE.NUM 0 I>F 4 I>F ~WallFanM73_Ctrl  F!RAMP 
42 LINE.NUM 0 I>F 4 I>F ~WallFanM75_Ctrl  F!RAMP 
43 LINE.NUM 0 I>F 4 I>F ~WallFanM77_Ctrl  F!RAMP 
44 LINE.NUM 0 ^TempFanSpeed @! 
46 LINE.NUM 1 ^HvacOn @! 
47 LINE.NUM 1 ^HvacFlag @! 
48 LINE.NUM 1 ^Response @! 
49 LINE.NUM THEN 
95 LINE.NUM " HVAC_ON" ^indexStep @@ *MasterCommand  FindSubString ^Position @! 
96 LINE.NUM ^Position @@ -1 >= IF 
97 LINE.NUM 1 ^HvacOn @! 
98 LINE.NUM 1 ^HvacFlag @! 
99 LINE.NUM 1 ^Response @! 
100 LINE.NUM THEN 
101 LINE.NUM " HVAC_OFF" ^indexStep @@ *MasterCommand  FindSubString ^Position @! 
102 LINE.NUM ^Position @@ -1 >= IF 
103 LINE.NUM 0 ^HvacOn @! 
104 LINE.NUM 1 ^HvacFlag @! 
105 LINE.NUM 1 ^Response @! 
106 LINE.NUM THEN 
110 LINE.NUM " PANEL_LIGHT_ENABLE" ^indexStep @@ *MasterCommand  FindSubString ^Position @! 
111 LINE.NUM ^Position @@ -1 >= IF 
112 LINE.NUM 1 ~LampTest @! 
113 LINE.NUM 1 ^Response @! 
114 LINE.NUM THEN 
115 LINE.NUM " PANEL_LIGHT_DISABLE" ^indexStep @@ *MasterCommand  FindSubString ^Position @! 
116 LINE.NUM ^Position @@ -1 >= IF 
117 LINE.NUM 0 ~LampTest @! 
118 LINE.NUM 1 ^Response @! 
119 LINE.NUM THEN 
121 LINE.NUM " PANEL_FANS_ON" ^indexStep @@ *MasterCommand  FindSubString ^Position @! 
122 LINE.NUM ^Position @@ -1 >= IF 
124 LINE.NUM 10 I>F 4 I>F ~CabinetFanCtrl  F!RAMP 
125 LINE.NUM 10 ^TempPanelSpeed @! 
126 LINE.NUM 1 ^Response @! 
127 LINE.NUM THEN 
128 LINE.NUM " PANEL_FANS_OFF" ^indexStep @@ *MasterCommand  FindSubString ^Position @! 
129 LINE.NUM ^Position @@ -1 >= IF 
131 LINE.NUM 0 I>F 4 I>F ~CabinetFanCtrl  F!RAMP 
132 LINE.NUM 0 ^TempPanelSpeed @! 
133 LINE.NUM 1 ^Response @! 
134 LINE.NUM THEN 
136 LINE.NUM " RED_LIGHT_ON" ^indexStep @@ *MasterCommand  FindSubString ^Position @! 
137 LINE.NUM ^Position @@ -1 >= IF 
138 LINE.NUM ~Red_Lt_Ctrl @@I LNOT  ~Red_Lt_Ctrl @! 
139 LINE.NUM 1 ^Response @! 
140 LINE.NUM THEN 
141 LINE.NUM " RED_LIGHT_OFF" ^indexStep @@ *MasterCommand  FindSubString ^Position @! 
142 LINE.NUM ^Position @@ -1 >= IF 
143 LINE.NUM ~Red_Lt_Ctrl @@I LNOT  ~Red_Lt_Ctrl @! 
144 LINE.NUM 1 ^Response @! 
145 LINE.NUM THEN 
146 LINE.NUM " RED_LIGHT_TOGGLE" ^indexStep @@ *MasterCommand  FindSubString ^Position @! 
147 LINE.NUM ^Position @@ -1 >= IF 
148 LINE.NUM ~Red_Lt_Ctrl @@I LNOT  ~Red_Lt_Ctrl @! 
149 LINE.NUM 1 ^Response @! 
150 LINE.NUM THEN 
168 LINE.NUM " PANEL_LED_GREEN" ^indexStep @@ *MasterCommand  FindSubString ^Position @! 
169 LINE.NUM ^Position @@ -1 >= IF 
170 LINE.NUM 0 ^PanelRedFlag @! 
171 LINE.NUM 1 ^PanelGrnFlag @! 
172 LINE.NUM 1 ^Response @! 
173 LINE.NUM THEN 
174 LINE.NUM " PANEL_LED_YELLOW" ^indexStep @@ *MasterCommand  FindSubString ^Position @! 
175 LINE.NUM ^Position @@ -1 >= IF 
176 LINE.NUM 1 ^PanelRedFlag @! 
177 LINE.NUM 1 ^PanelGrnFlag @! 
178 LINE.NUM 1 ^Response @! 
179 LINE.NUM THEN 
180 LINE.NUM " PANEL_LED_RED" ^indexStep @@ *MasterCommand  FindSubString ^Position @! 
181 LINE.NUM ^Position @@ -1 >= IF 
182 LINE.NUM 1 ^PanelRedFlag @! 
183 LINE.NUM 0 ^PanelGrnFlag @! 
184 LINE.NUM 1 ^Response @! 
185 LINE.NUM THEN 
186 LINE.NUM " PANEL_LED_OFF" ^indexStep @@ *MasterCommand  FindSubString ^Position @! 
187 LINE.NUM ^Position @@ -1 >= IF 
188 LINE.NUM 0 ^PanelRedFlag @! 
189 LINE.NUM 0 ^PanelGrnFlag @! 
190 LINE.NUM 1 ^Response @! 
191 LINE.NUM THEN 
194 LINE.NUM " DOOR_LED_GREEN" ^indexStep @@ *MasterCommand  FindSubString ^Position @! 
195 LINE.NUM ^Position @@ -1 >= IF 
196 LINE.NUM 0 ^DoorRedFlag @! 
197 LINE.NUM 1 ^DoorGrnFlag @! 
198 LINE.NUM 1 ^Response @! 
199 LINE.NUM THEN 
201 LINE.NUM " DOOR_LED_YELLOW" ^indexStep @@ *MasterCommand  FindSubString ^Position @! 
202 LINE.NUM ^Position @@ -1 >= IF 
203 LINE.NUM 1 ^DoorRedFlag @! 
204 LINE.NUM 1 ^DoorGrnFlag @! 
205 LINE.NUM 1 ^Response @! 
206 LINE.NUM THEN 
207 LINE.NUM " DOOR_LED_RED" ^indexStep @@ *MasterCommand  FindSubString ^Position @! 
208 LINE.NUM ^Position @@ -1 >= IF 
209 LINE.NUM 1 ^DoorRedFlag @! 
210 LINE.NUM 0 ^DoorGrnFlag @! 
211 LINE.NUM 1 ^Response @! 
212 LINE.NUM THEN 
213 LINE.NUM " DOOR_LED_OFF" ^indexStep @@ *MasterCommand  FindSubString ^Position @! 
214 LINE.NUM ^Position @@ -1 >= IF 
215 LINE.NUM 0 ^DoorRedFlag @! 
216 LINE.NUM 0 ^DoorGrnFlag @! 
217 LINE.NUM 1 ^Response @! 
218 LINE.NUM THEN 
219 LINE.NUM " LED_BRIGHT" ^indexStep @@ *MasterCommand  FindSubString ^Position @! 
220 LINE.NUM ^Position @@ -1 >= IF 
221 LINE.NUM 0 ^Dim @! 
222 LINE.NUM 1 ^Response @! 
223 LINE.NUM THEN 
224 LINE.NUM " LED_DIM" ^indexStep @@ *MasterCommand  FindSubString ^Position @! 
225 LINE.NUM ^Position @@ -1 >= IF 
226 LINE.NUM 1 ^Dim @! 
227 LINE.NUM 1 ^Response @! 
228 LINE.NUM THEN 
230 LINE.NUM " LED_BLINK" ^indexStep @@ *MasterCommand  FindSubString ^Position @! 
231 LINE.NUM ^Position @@ -1 >= IF 
232 LINE.NUM 1 ^LEDsBlink @! 
233 LINE.NUM 1 ^Response @! 
234 LINE.NUM THEN 
235 LINE.NUM " LED_STEADY" ^indexStep @@ *MasterCommand  FindSubString ^Position @! 
236 LINE.NUM ^Position @@ -1 >= IF 
237 LINE.NUM 0 ^LEDsBlink @! 
238 LINE.NUM 1 ^Response @! 
239 LINE.NUM THEN 
242 LINE.NUM " SON_ALERT_ON" ^indexStep @@ *MasterCommand  FindSubString ^Position @! 
243 LINE.NUM ^Position @@ -1 >= IF 
244 LINE.NUM 1 ~Sonalert @! 
245 LINE.NUM 1 ^Response @! 
246 LINE.NUM THEN 
247 LINE.NUM " SON_ALERT_OFF" ^indexStep @@ *MasterCommand  FindSubString ^Position @! 
248 LINE.NUM ^Position @@ -1 >= IF 
249 LINE.NUM 0 ~Sonalert @! 
250 LINE.NUM 1 ^Response @! 
251 LINE.NUM THEN 
253 LINE.NUM ^Response @@ 1 = IF 
254 LINE.NUM " TRUE" *SentString  $MOVE 
256 LINE.NUM ELSE 
257 LINE.NUM " FALSE" *SentString  $MOVE 
259 LINE.NUM THEN 
260 LINE.NUM *SentString *Master_Handle  PRT$ ^MasterXmitStatus @! 
261 LINE.NUM *MasterCommand *LastCommand  $MOVE 
262 LINE.NUM " " *MasterCommand  $MOVE 
-2 JUMP ;
: 5_193
2 LINE.NUM 1 I>F ~ECB_Ctrl  PULSEON 
2 JUMP ;
: 5_197

1 LINE.NUM
  " RESET_ECB" 
 
  ^indexStep @@ 
  *MasterCommand   FindSubString
  ^MasterCommandStringRcvd @! 
28 JUMP ;
: 5_200
-26 JUMP ;
: 5_201
-27 JUMP ;
: 5_205
-28 JUMP ;
: 5_206
-29 JUMP ;
: 5_207
-30 JUMP ;
: 5_214
-31 JUMP ;
: 5_292

1 LINE.NUM
  " HEARTBEAT" 
 
  ^indexStep @@ 
  *MasterCommand   FindSubString
  ^MasterCommandStringRcvd @! 
20 JUMP ;
: 5_297

1 LINE.NUM
  " ," 
 
  0  
  *MasterCommand   FindSubString
  ^MasterCommandStringRcvd @! 
22 JUMP ;
: 5_299

1 LINE.NUM
  1  
  ^indexStep @!   
-3 JUMP ;
: 5_310

1 LINE.NUM
  *Master_Handle   STREAM.CLEAR.BUF
23 JUMP ;
: 5_313

1 LINE.NUM
  *Master_Handle   STREAM.CLEAR.BUF
-18 JUMP ;
: 5_320

1 LINE.NUM
  *Master_Handle   CLOSE
  ^Master_CommClosed @! 
-35 JUMP ;
: 5_332

1 LINE.NUM
  120.0  
  ^Timer_GetChar   SetTimer

2 LINE.NUM
  ^Timer_GetChar   StartTimer
7 JUMP ;
: 5_7
FALSE

1 LINE.NUM
  ^MasterCommEstablished @@ 
  0    =
LOR

2 LINE.NUM
  ^MasterCommEstablished @@ 
  -47    =
LOR
IF -33 ELSE -43 THEN JUMP ;
: 5_14
FALSE

1 LINE.NUM
  ^ListeningForMaster @@ 
  0    =
LOR

2 LINE.NUM
  ^ListeningForMaster @@ 
  -47    =
LOR
IF -43 ELSE -42 THEN JUMP ;
: 5_17
TRUE

1 LINE.NUM
  ^Master_Handle_CharNumWaiting @@ 
  0    <
LAND
IF 1 ELSE -40 THEN JUMP ;
: 5_19
TRUE

1 LINE.NUM
  ^Master_Handle_CharNumWaiting @@ 
  0    >
LAND
IF -5 ELSE 4 THEN JUMP ;
: 5_25
FALSE

1 LINE.NUM
  ^Master_Handle_CharNumWaiting @@ 
  -37    =
LOR

2 LINE.NUM
  ^Master_Handle_CharNumWaiting @@ 
  -39    =
LOR
IF -42 ELSE -41 THEN JUMP ;
: 5_35
TRUE

1 LINE.NUM
  ^MasterCommandStringRcvd @@ 
  0    =
LAND
IF -9 ELSE 0 THEN JUMP ;
: 5_39
FALSE

1 LINE.NUM
  ^MasterCommandStringRcvd @@ 
  -37    =
LOR

2 LINE.NUM
  ^MasterCommandStringRcvd @@ 
  -39    =
LOR
IF -41 ELSE -40 THEN JUMP ;
: 5_66
TRUE

1 LINE.NUM
  ^Master_Handle_CharNumWaiting @@ 
  6    <
LAND
IF -41 ELSE -43 THEN JUMP ;
: 5_72
TRUE

1 LINE.NUM
  ^Timer_GetChar   T0=
LAND
IF -11 ELSE -7 THEN JUMP ;
: 5_110
TRUE

1 LINE.NUM
  ^MasterCommandStringRcvd @@ 
  -1    >
LAND
IF -39 ELSE -26 THEN JUMP ;
: 5_117
TRUE

1 LINE.NUM
  ^MasterCommandStringRcvd @@ 
  -1    >
LAND
IF -38 ELSE -41 THEN JUMP ;
: 5_124
TRUE

1 LINE.NUM
  ^MasterCommandStringRcvd @@ 
  -1    >
LAND
IF -37 ELSE -40 THEN JUMP ;
: 5_129
TRUE

1 LINE.NUM
  ^MasterCommandStringRcvd @@ 
  -1    >
LAND
IF -36 ELSE -34 THEN JUMP ;
: 5_139
TRUE

1 LINE.NUM
  ^MasterCommandStringRcvd @@ 
  -1    >
LAND
IF -36 ELSE -28 THEN JUMP ;
: 5_144
FALSE

1 LINE.NUM
  ^MasterCommandStringRcvd @@ 
  -1    >
LOR
IF -46 ELSE -39 THEN JUMP ;
: 5_195
TRUE

1 LINE.NUM
  ^MasterCommandStringRcvd @@ 
  -1    >
LAND
IF -31 ELSE -42 THEN JUMP ;
: 5_293
TRUE

1 LINE.NUM
  ^MasterCommandStringRcvd @@ 
  -1    >
LAND
IF -22 ELSE -23 THEN JUMP ;
: 5_300
TRUE

1 LINE.NUM
  ^MasterCommandStringRcvd @@ 
  -1    >
LAND
IF -23 ELSE -25 THEN JUMP ;
: 5_325
TRUE

1 LINE.NUM
  ^MasterCommandStringRcvd @@ 
  0    <=
LAND
IF 1 ELSE -22 THEN JUMP ;
: 5_330
TRUE

1 LINE.NUM
  *Master_Handle   ?OPEN 0>
LAND
IF 0 ELSE -56 THEN JUMP ;
T: T5
DUMMY
5_0
5_5
5_9
5_12
5_15
5_20
5_22
5_29
5_34
5_41
5_60
5_69
5_94
5_108
5_112
5_115
5_119
5_122
5_126
5_127
5_131
5_140
5_142
5_147
5_154
5_156
5_183
5_186
5_193
5_197
5_200
5_201
5_205
5_206
5_207
5_214
5_292
5_297
5_299
5_310
5_313
5_320
5_332
5_7
5_14
5_17
5_19
5_25
5_35
5_39
5_66
5_72
5_110
5_117
5_124
5_129
5_139
5_144
5_195
5_293
5_300
5_325
5_330
T;
&Master_Comm ' T5 SETTASK
