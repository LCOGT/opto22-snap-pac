: 6_0
3 JUMP ;
: 6_5

1 LINE.NUM
  10    DELAY
0 JUMP ;
: 6_9

1 LINE.NUM
  *Master_Handle   ACCEPT
  ^MasterCommEstablished @! 
35 JUMP ;
: 6_12

1 LINE.NUM
  10    DELAY
0 JUMP ;
: 6_15

1 LINE.NUM
  *Master_Handle   LISTEN
  ^ListeningForMaster @! 
34 JUMP ;
: 6_20

1 LINE.NUM
  *Master_Handle   ?STREAM.KEY
  ^Master_Handle_CharNumWaiting @! 
35 JUMP ;
: 6_22

1 LINE.NUM
  10    DELAY
-2 JUMP ;
: 6_29

1 LINE.NUM
  *Master_Handle   CLOSE
  ^Master_CommClosed @! 
-4 JUMP ;
: 6_34

1 LINE.NUM
  *MasterCommand 
  *Master_Handle   GET$
  ^MasterCommandStringRcvd @! 
34 JUMP ;
: 6_41

1 LINE.NUM
  10    DELAY
-5 JUMP ;
: 6_60

1 LINE.NUM
  *Master_Handle   STREAM.CLEAR.BUF
-6 JUMP ;
: 6_91

1 LINE.NUM
  120.0  
  ^Socket_Timer   SetTimer

2 LINE.NUM
  ^Socket_Timer   StartTimer
-7 JUMP ;
: 6_99

1 LINE.NUM
  *Master_Handle   CLOSE
  ^Master_CommClosed @! 
-6 JUMP ;
: 6_106

1 LINE.NUM
  120.0  
  ^Socket_Timer   SetTimer

2 LINE.NUM
  ^Socket_Timer   StartTimer
31 JUMP ;
: 6_312

1 LINE.NUM
  *MasterCommand   $>Upper

2 LINE.NUM
  " HEARTBEAT" 
 
  ^indexStep @@ 
  *MasterCommand   FindSubString
  ^MasterCommandStringRcvd @! 
33 JUMP ;
: 6_335
4 LINE.NUM 0 ^Response @! 
6 LINE.NUM " OUTLET_FAN_1_HI" ^indexStep @@ *MasterCommand  FindSubString ^Position @! 
7 LINE.NUM ^Position @@ -1 >= IF 
8 LINE.NUM 10 I>F 2 I>F ~SSB_Exhaust_Fan_Speed  F!RAMP 
9 LINE.NUM 1 ^Response @! 
10 LINE.NUM THEN 
11 LINE.NUM " OUTLET_FAN_1_MED" ^indexStep @@ *MasterCommand  FindSubString ^Position @! 
12 LINE.NUM ^Position @@ -1 >= IF 
13 LINE.NUM 6 I>F 2 I>F ~SSB_Exhaust_Fan_Speed  F!RAMP 
14 LINE.NUM 1 ^Response @! 
15 LINE.NUM THEN 
16 LINE.NUM " OUTLET_FAN_1_LOW" ^indexStep @@ *MasterCommand  FindSubString ^Position @! 
17 LINE.NUM ^Position @@ -1 >= IF 
18 LINE.NUM 3 I>F 2 I>F ~SSB_Exhaust_Fan_Speed  F!RAMP 
19 LINE.NUM 1 ^Response @! 
20 LINE.NUM THEN 
21 LINE.NUM " OUTLET_FAN_1_OFF" ^indexStep @@ *MasterCommand  FindSubString ^Position @! 
22 LINE.NUM ^Position @@ -1 >= IF 
23 LINE.NUM 0 I>F 2 I>F ~SSB_Exhaust_Fan_Speed  F!RAMP 
24 LINE.NUM 1 ^Response @! 
25 LINE.NUM THEN 
26 LINE.NUM " PANEL_FAN_1_HI" ^indexStep @@ *MasterCommand  FindSubString ^Position @! 
27 LINE.NUM ^Position @@ -1 >= IF 
28 LINE.NUM 10 I>F 2 I>F ~Acp_Panel_Fan_Speed  F!RAMP 
29 LINE.NUM 1 ^Response @! 
30 LINE.NUM THEN 
31 LINE.NUM " PANEL_FAN_1_MED" ^indexStep @@ *MasterCommand  FindSubString ^Position @! 
32 LINE.NUM ^Position @@ -1 >= IF 
33 LINE.NUM 6.50000000e+000 2 I>F ~Acp_Panel_Fan_Speed  F!RAMP 
34 LINE.NUM 1 ^Response @! 
35 LINE.NUM THEN 
36 LINE.NUM " PANEL_FAN_1_LOW" ^indexStep @@ *MasterCommand  FindSubString ^Position @! 
37 LINE.NUM ^Position @@ -1 >= IF 
38 LINE.NUM 3 I>F 2 I>F ~Acp_Panel_Fan_Speed  F!RAMP 
39 LINE.NUM 1 ^Response @! 
40 LINE.NUM THEN 
41 LINE.NUM " PANEL_FAN_1_OFF" ^indexStep @@ *MasterCommand  FindSubString ^Position @! 
42 LINE.NUM ^Position @@ -1 >= IF 
43 LINE.NUM 0 I>F 4 I>F ~Acp_Panel_Fan_Speed  F!RAMP 
44 LINE.NUM 1 ^Response @! 
45 LINE.NUM THEN 
46 LINE.NUM " INLET_FAN_1_HI" ^indexStep @@ *MasterCommand  FindSubString ^Position @! 
47 LINE.NUM ^Position @@ -1 >= IF 
48 LINE.NUM 1 ~FAN_M2_4_ON @! 
49 LINE.NUM 1 ^Response @! 
50 LINE.NUM THEN 
51 LINE.NUM " INLET_FAN_2_HI" ^indexStep @@ *MasterCommand  FindSubString ^Position @! 
52 LINE.NUM ^Position @@ -1 >= IF 
53 LINE.NUM 1 ~FAN_M2_7_ON @! 
54 LINE.NUM 1 ^Response @! 
55 LINE.NUM THEN 
56 LINE.NUM " INLET_FAN_3_HI" ^indexStep @@ *MasterCommand  FindSubString ^Position @! 
57 LINE.NUM ^Position @@ -1 >= IF 
58 LINE.NUM 1 ~FAN_M3_2_ON @! 
59 LINE.NUM 1 ^Response @! 
60 LINE.NUM THEN 
61 LINE.NUM " INLET_FAN_4_HI" ^indexStep @@ *MasterCommand  FindSubString ^Position @! 
62 LINE.NUM ^Position @@ -1 >= IF 
63 LINE.NUM 1 ~FAN_M3_5_ON @! 
64 LINE.NUM 1 ^Response @! 
65 LINE.NUM THEN 
66 LINE.NUM " INLET_FAN_1_OFF" ^indexStep @@ *MasterCommand  FindSubString ^Position @! 
67 LINE.NUM ^Position @@ -1 >= IF 
68 LINE.NUM 0 ~FAN_M2_4_ON @! 
69 LINE.NUM 1 ^Response @! 
70 LINE.NUM THEN 
71 LINE.NUM " INLET_FAN_2_OFF" ^indexStep @@ *MasterCommand  FindSubString ^Position @! 
72 LINE.NUM ^Position @@ -1 >= IF 
73 LINE.NUM 0 ~FAN_M2_7_ON @! 
74 LINE.NUM 1 ^Response @! 
75 LINE.NUM THEN 
76 LINE.NUM " INLET_FAN_3_OFF" ^indexStep @@ *MasterCommand  FindSubString ^Position @! 
77 LINE.NUM ^Position @@ -1 >= IF 
78 LINE.NUM 0 ~FAN_M3_2_ON @! 
79 LINE.NUM 1 ^Response @! 
80 LINE.NUM THEN 
81 LINE.NUM " INLET_FAN_4_OFF" ^indexStep @@ *MasterCommand  FindSubString ^Position @! 
82 LINE.NUM ^Position @@ -1 >= IF 
83 LINE.NUM 0 ~FAN_M3_5_ON @! 
84 LINE.NUM 1 ^Response @! 
85 LINE.NUM THEN 
86 LINE.NUM " SSB_FANS_HI" ^indexStep @@ *MasterCommand  FindSubString ^Position @! 
87 LINE.NUM ^Position @@ -1 >= IF 
88 LINE.NUM 1 ~FAN_M2_4_ON @! 
89 LINE.NUM 1 ~FAN_M2_7_ON @! 
90 LINE.NUM 1 ~FAN_M3_2_ON @! 
91 LINE.NUM 1 ~FAN_M3_5_ON @! 
92 LINE.NUM 10 I>F 2 I>F ~SSB_Exhaust_Fan_Speed  F!RAMP 
93 LINE.NUM 1 ^Response @! 
94 LINE.NUM THEN 
95 LINE.NUM " SSB_FANS_MED" ^indexStep @@ *MasterCommand  FindSubString ^Position @! 
96 LINE.NUM ^Position @@ -1 >= IF 
97 LINE.NUM 1 ~FAN_M2_4_ON @! 
98 LINE.NUM 0 ~FAN_M2_7_ON @! 
99 LINE.NUM 0 ~FAN_M3_2_ON @! 
100 LINE.NUM 1 ~FAN_M3_5_ON @! 
101 LINE.NUM 6 I>F 2 I>F ~SSB_Exhaust_Fan_Speed  F!RAMP 
102 LINE.NUM 1 ^Response @! 
103 LINE.NUM THEN 
104 LINE.NUM " SSB_FANS_LOW" ^indexStep @@ *MasterCommand  FindSubString ^Position @! 
105 LINE.NUM ^Position @@ -1 >= IF 
106 LINE.NUM 1 ~FAN_M2_4_ON @! 
107 LINE.NUM 0 ~FAN_M2_7_ON @! 
108 LINE.NUM 0 ~FAN_M3_2_ON @! 
109 LINE.NUM 0 ~FAN_M3_5_ON @! 
110 LINE.NUM 3 I>F 2 I>F ~SSB_Exhaust_Fan_Speed  F!RAMP 
111 LINE.NUM 1 ^Response @! 
112 LINE.NUM THEN 
113 LINE.NUM " SSB_FANS_OFF" ^indexStep @@ *MasterCommand  FindSubString ^Position @! 
114 LINE.NUM ^Position @@ -1 >= IF 
115 LINE.NUM 0 ~FAN_M2_4_ON @! 
116 LINE.NUM 0 ~FAN_M2_7_ON @! 
117 LINE.NUM 0 ~FAN_M3_2_ON @! 
118 LINE.NUM 0 ~FAN_M3_5_ON @! 
119 LINE.NUM 0 I>F 2 I>F ~SSB_Exhaust_Fan_Speed  F!RAMP 
120 LINE.NUM 1 ^Response @! 
121 LINE.NUM THEN 
122 LINE.NUM " FENCE_LED_GREEN" ^indexStep @@ *MasterCommand  FindSubString ^Position @! 
123 LINE.NUM ^Position @@ -1 >= IF 
124 LINE.NUM 0 ^FenceRedFlag @! 
125 LINE.NUM 1 ^FenceGrnFlag @! 
126 LINE.NUM 1 ^Response @! 
127 LINE.NUM THEN 
128 LINE.NUM " FENCE_LED_YELLOW" ^indexStep @@ *MasterCommand  FindSubString ^Position @! 
129 LINE.NUM ^Position @@ -1 >= IF 
130 LINE.NUM 1 ^FenceRedFlag @! 
131 LINE.NUM 1 ^FenceGrnFlag @! 
132 LINE.NUM 1 ^Response @! 
133 LINE.NUM THEN 
134 LINE.NUM " FENCE_LED_RED" ^indexStep @@ *MasterCommand  FindSubString ^Position @! 
135 LINE.NUM ^Position @@ -1 >= IF 
136 LINE.NUM 1 ^FenceRedFlag @! 
137 LINE.NUM 0 ^FenceGrnFlag @! 
138 LINE.NUM 1 ^Response @! 
139 LINE.NUM THEN 
140 LINE.NUM " FENCE_LED_OFF" ^indexStep @@ *MasterCommand  FindSubString ^Position @! 
141 LINE.NUM ^Position @@ -1 >= IF 
142 LINE.NUM 0 ^FenceRedFlag @! 
143 LINE.NUM 0 ^FenceGrnFlag @! 
144 LINE.NUM 1 ^Response @! 
145 LINE.NUM THEN 
146 LINE.NUM " FENCE_LED_BLINK" ^indexStep @@ *MasterCommand  FindSubString ^Position @! 
147 LINE.NUM ^Position @@ -1 >= IF 
148 LINE.NUM 1 ^FenceBlink @! 
149 LINE.NUM 1 ^Response @! 
150 LINE.NUM THEN 
151 LINE.NUM " FENCE_LED_STEADY" ^indexStep @@ *MasterCommand  FindSubString ^Position @! 
152 LINE.NUM ^Position @@ -1 >= IF 
153 LINE.NUM 0 ^FenceBlink @! 
154 LINE.NUM 1 ^Response @! 
155 LINE.NUM THEN 
157 LINE.NUM " ENCL_A_LED_GREEN" ^indexStep @@ *MasterCommand  FindSubString ^Position @! 
158 LINE.NUM ^Position @@ -1 >= IF 
159 LINE.NUM 0 ^EncARedFlag @! 
160 LINE.NUM 1 ^EncAGrnFlag @! 
161 LINE.NUM 1 ^Response @! 
162 LINE.NUM THEN 
164 LINE.NUM " ENCL_A_LED_YELLOW" ^indexStep @@ *MasterCommand  FindSubString ^Position @! 
165 LINE.NUM ^Position @@ -1 >= IF 
166 LINE.NUM 1 ^EncARedFlag @! 
167 LINE.NUM 1 ^EncAGrnFlag @! 
168 LINE.NUM 1 ^Response @! 
169 LINE.NUM THEN 
170 LINE.NUM " ENCL_A_LED_RED" ^indexStep @@ *MasterCommand  FindSubString ^Position @! 
171 LINE.NUM ^Position @@ -1 >= IF 
172 LINE.NUM 1 ^EncARedFlag @! 
173 LINE.NUM 0 ^EncAGrnFlag @! 
174 LINE.NUM 1 ^Response @! 
175 LINE.NUM THEN 
176 LINE.NUM " ENCL_A_LED_OFF" ^indexStep @@ *MasterCommand  FindSubString ^Position @! 
177 LINE.NUM ^Position @@ -1 >= IF 
178 LINE.NUM 0 ^EncARedFlag @! 
179 LINE.NUM 0 ^EncAGrnFlag @! 
180 LINE.NUM 1 ^Response @! 
181 LINE.NUM THEN 
182 LINE.NUM " ENCL_A_LED_BLINK" ^indexStep @@ *MasterCommand  FindSubString ^Position @! 
183 LINE.NUM ^Position @@ -1 >= IF 
184 LINE.NUM 1 ^EncABlink @! 
185 LINE.NUM 1 ^Response @! 
186 LINE.NUM THEN 
187 LINE.NUM " ENCL_A_LED_STEADY" ^indexStep @@ *MasterCommand  FindSubString ^Position @! 
188 LINE.NUM ^Position @@ -1 >= IF 
189 LINE.NUM 0 ^EncABlink @! 
190 LINE.NUM 1 ^Response @! 
191 LINE.NUM THEN 
192 LINE.NUM " ENCL_B_LED_GREEN" ^indexStep @@ *MasterCommand  FindSubString ^Position @! 
193 LINE.NUM ^Position @@ -1 >= IF 
194 LINE.NUM 0 ^EncARedFlag @! 
195 LINE.NUM 1 ^EncAGrnFlag @! 
196 LINE.NUM 1 ^Response @! 
197 LINE.NUM THEN 
199 LINE.NUM " ENCL_B_LED_YELLOW" ^indexStep @@ *MasterCommand  FindSubString ^Position @! 
200 LINE.NUM ^Position @@ -1 >= IF 
201 LINE.NUM 1 ^EncARedFlag @! 
202 LINE.NUM 1 ^EncAGrnFlag @! 
203 LINE.NUM 1 ^Response @! 
204 LINE.NUM THEN 
205 LINE.NUM " ENCL_B_LED_RED" ^indexStep @@ *MasterCommand  FindSubString ^Position @! 
206 LINE.NUM ^Position @@ -1 >= IF 
207 LINE.NUM 1 ^EncARedFlag @! 
208 LINE.NUM 0 ^EncAGrnFlag @! 
209 LINE.NUM 1 ^Response @! 
210 LINE.NUM THEN 
211 LINE.NUM " ENCL_B_LED_OFF" ^indexStep @@ *MasterCommand  FindSubString ^Position @! 
212 LINE.NUM ^Position @@ -1 >= IF 
213 LINE.NUM 0 ^EncARedFlag @! 
214 LINE.NUM 0 ^EncAGrnFlag @! 
215 LINE.NUM 1 ^Response @! 
216 LINE.NUM THEN 
217 LINE.NUM " ENCL_B_LED_BLINK" ^indexStep @@ *MasterCommand  FindSubString ^Position @! 
218 LINE.NUM ^Position @@ -1 >= IF 
219 LINE.NUM 1 ^EncABlink @! 
220 LINE.NUM 1 ^Response @! 
221 LINE.NUM THEN 
222 LINE.NUM " ENCL_B_LED_STEADY" ^indexStep @@ *MasterCommand  FindSubString ^Position @! 
223 LINE.NUM ^Position @@ -1 >= IF 
224 LINE.NUM 0 ^EncABlink @! 
225 LINE.NUM 1 ^Response @! 
226 LINE.NUM THEN 
227 LINE.NUM " ENCL_C_LED_GREEN" ^indexStep @@ *MasterCommand  FindSubString ^Position @! 
228 LINE.NUM ^Position @@ -1 >= IF 
229 LINE.NUM 0 ^EncARedFlag @! 
230 LINE.NUM 1 ^EncAGrnFlag @! 
231 LINE.NUM 1 ^Response @! 
232 LINE.NUM THEN 
234 LINE.NUM " ENCL_C_LED_YELLOW" ^indexStep @@ *MasterCommand  FindSubString ^Position @! 
235 LINE.NUM ^Position @@ -1 >= IF 
236 LINE.NUM 1 ^EncARedFlag @! 
237 LINE.NUM 1 ^EncAGrnFlag @! 
238 LINE.NUM 1 ^Response @! 
239 LINE.NUM THEN 
240 LINE.NUM " ENCL_C_LED_RED" ^indexStep @@ *MasterCommand  FindSubString ^Position @! 
241 LINE.NUM ^Position @@ -1 >= IF 
242 LINE.NUM 1 ^EncARedFlag @! 
243 LINE.NUM 0 ^EncAGrnFlag @! 
244 LINE.NUM 1 ^Response @! 
245 LINE.NUM THEN 
246 LINE.NUM " ENCL_C_LED_OFF" ^indexStep @@ *MasterCommand  FindSubString ^Position @! 
247 LINE.NUM ^Position @@ -1 >= IF 
248 LINE.NUM 0 ^EncARedFlag @! 
249 LINE.NUM 0 ^EncAGrnFlag @! 
250 LINE.NUM 1 ^Response @! 
251 LINE.NUM THEN 
252 LINE.NUM " ENCL_C_LED_BLINK" ^indexStep @@ *MasterCommand  FindSubString ^Position @! 
253 LINE.NUM ^Position @@ -1 >= IF 
254 LINE.NUM 1 ^EncABlink @! 
255 LINE.NUM 1 ^Response @! 
256 LINE.NUM THEN 
257 LINE.NUM " ENCL_C_LED_STEADY" ^indexStep @@ *MasterCommand  FindSubString ^Position @! 
258 LINE.NUM ^Position @@ -1 >= IF 
259 LINE.NUM 0 ^EncABlink @! 
260 LINE.NUM 1 ^Response @! 
261 LINE.NUM THEN 
264 LINE.NUM " SITEKEY_LED_GREEN" ^indexStep @@ *MasterCommand  FindSubString ^Position @! 
265 LINE.NUM ^Position @@ -1 >= IF 
266 LINE.NUM 0 ^SiteRedFlag @! 
267 LINE.NUM 1 ^SiteGrnFlag @! 
268 LINE.NUM 1 ^Response @! 
269 LINE.NUM THEN 
270 LINE.NUM " SITEKEY_LED_YELLOW" ^indexStep @@ *MasterCommand  FindSubString ^Position @! 
271 LINE.NUM ^Position @@ -1 >= IF 
272 LINE.NUM 1 ^SiteRedFlag @! 
273 LINE.NUM 1 ^SiteGrnFlag @! 
274 LINE.NUM 1 ^Response @! 
275 LINE.NUM THEN 
276 LINE.NUM " SITEKEY_LED_RED" ^indexStep @@ *MasterCommand  FindSubString ^Position @! 
277 LINE.NUM ^Position @@ -1 >= IF 
278 LINE.NUM 1 ^SiteRedFlag @! 
279 LINE.NUM 0 ^SiteGrnFlag @! 
280 LINE.NUM 1 ^Response @! 
281 LINE.NUM THEN 
282 LINE.NUM " SITEKEY_LED_OFF" ^indexStep @@ *MasterCommand  FindSubString ^Position @! 
283 LINE.NUM ^Position @@ -1 >= IF 
284 LINE.NUM 0 ^SiteRedFlag @! 
285 LINE.NUM 0 ^SiteGrnFlag @! 
286 LINE.NUM 1 ^Response @! 
287 LINE.NUM THEN 
288 LINE.NUM " SITEKEY_LED_BLINK" ^indexStep @@ *MasterCommand  FindSubString ^Position @! 
289 LINE.NUM ^Position @@ -1 >= IF 
290 LINE.NUM 1 ^SiteBlink @! 
291 LINE.NUM 1 ^Response @! 
292 LINE.NUM THEN 
293 LINE.NUM " SITEKEY_LED_STEADY" ^indexStep @@ *MasterCommand  FindSubString ^Position @! 
294 LINE.NUM ^Position @@ -1 >= IF 
295 LINE.NUM 0 ^SiteBlink @! 
296 LINE.NUM 1 ^Response @! 
297 LINE.NUM THEN 
299 LINE.NUM " SHUTDOWN_LED_GREEN" ^indexStep @@ *MasterCommand  FindSubString ^Position @! 
300 LINE.NUM ^Position @@ -1 >= IF 
301 LINE.NUM 0 ^ShutdownRedFlag @! 
302 LINE.NUM 1 ^ShutdownGrnFlag @! 
303 LINE.NUM 1 ^Response @! 
304 LINE.NUM THEN 
305 LINE.NUM " SHUTDOWN_LED_YELLOW" ^indexStep @@ *MasterCommand  FindSubString ^Position @! 
306 LINE.NUM ^Position @@ -1 >= IF 
307 LINE.NUM 1 ^ShutdownRedFlag @! 
308 LINE.NUM 1 ^ShutdownGrnFlag @! 
309 LINE.NUM 1 ^Response @! 
310 LINE.NUM THEN 
311 LINE.NUM " SHUTDOWN_LED_RED" ^indexStep @@ *MasterCommand  FindSubString ^Position @! 
312 LINE.NUM ^Position @@ -1 >= IF 
313 LINE.NUM 1 ^ShutdownRedFlag @! 
314 LINE.NUM 0 ^ShutdownGrnFlag @! 
315 LINE.NUM 1 ^Response @! 
316 LINE.NUM THEN 
317 LINE.NUM " SHUTDOWN_LED_OFF" ^indexStep @@ *MasterCommand  FindSubString ^Position @! 
318 LINE.NUM ^Position @@ -1 >= IF 
319 LINE.NUM 0 ^ShutdownRedFlag @! 
320 LINE.NUM 0 ^ShutdownGrnFlag @! 
321 LINE.NUM 1 ^Response @! 
322 LINE.NUM THEN 
323 LINE.NUM " SHUTDOWN_LED_BLINK" ^indexStep @@ *MasterCommand  FindSubString ^Position @! 
324 LINE.NUM ^Position @@ -1 >= IF 
325 LINE.NUM 1 ^ShutdownBlink @! 
326 LINE.NUM 1 ^Response @! 
327 LINE.NUM THEN 
328 LINE.NUM " SHUTDOWN_LED_STEADY" ^indexStep @@ *MasterCommand  FindSubString ^Position @! 
329 LINE.NUM ^Position @@ -1 >= IF 
330 LINE.NUM 0 ^ShutdownBlink @! 
331 LINE.NUM 1 ^Response @! 
332 LINE.NUM THEN 
334 LINE.NUM " SSB_LED_GREEN" ^indexStep @@ *MasterCommand  FindSubString ^Position @! 
335 LINE.NUM ^Position @@ -1 >= IF 
336 LINE.NUM 0 ^SSBRedFlag @! 
337 LINE.NUM 1 ^SSBGrnFlag @! 
338 LINE.NUM 1 ^Response @! 
339 LINE.NUM THEN 
340 LINE.NUM " SSB_LED_YELLOW" ^indexStep @@ *MasterCommand  FindSubString ^Position @! 
341 LINE.NUM ^Position @@ -1 >= IF 
342 LINE.NUM 1 ^SSBRedFlag @! 
343 LINE.NUM 1 ^SSBGrnFlag @! 
344 LINE.NUM 1 ^Response @! 
345 LINE.NUM THEN 
346 LINE.NUM " SSB_LED_RED" ^indexStep @@ *MasterCommand  FindSubString ^Position @! 
347 LINE.NUM ^Position @@ -1 >= IF 
348 LINE.NUM 1 ^SSBRedFlag @! 
349 LINE.NUM 0 ^SSBGrnFlag @! 
350 LINE.NUM 1 ^Response @! 
351 LINE.NUM THEN 
352 LINE.NUM " SSB_LED_OFF" ^indexStep @@ *MasterCommand  FindSubString ^Position @! 
353 LINE.NUM ^Position @@ -1 >= IF 
354 LINE.NUM 0 ^SSBRedFlag @! 
355 LINE.NUM 0 ^SSBGrnFlag @! 
356 LINE.NUM 1 ^Response @! 
357 LINE.NUM THEN 
358 LINE.NUM " SSB_LED_BLINK" ^indexStep @@ *MasterCommand  FindSubString ^Position @! 
359 LINE.NUM ^Position @@ -1 >= IF 
360 LINE.NUM 1 ^SSBBlink @! 
361 LINE.NUM 1 ^Response @! 
362 LINE.NUM THEN 
363 LINE.NUM " SSB_LED_STEADY" ^indexStep @@ *MasterCommand  FindSubString ^Position @! 
364 LINE.NUM ^Position @@ -1 >= IF 
365 LINE.NUM 0 ^SSBBlink @! 
366 LINE.NUM 1 ^Response @! 
367 LINE.NUM THEN 
371 LINE.NUM " SON_ALERT_ON" ^indexStep @@ *MasterCommand  FindSubString ^Position @! 
372 LINE.NUM ^Position @@ -1 >= IF 
373 LINE.NUM 1 ~Sonalert @! 
374 LINE.NUM 1 ^Response @! 
375 LINE.NUM THEN 
376 LINE.NUM " SON_ALERT_OFF" ^indexStep @@ *MasterCommand  FindSubString ^Position @! 
377 LINE.NUM ^Position @@ -1 >= IF 
378 LINE.NUM 0 ~Sonalert @! 
379 LINE.NUM 1 ^Response @! 
380 LINE.NUM THEN 
382 LINE.NUM ^Response @@ 1 = IF 
383 LINE.NUM " Success=TRUE" *Master_Handle  PRT$ ^MasterXmitStatus @! 
384 LINE.NUM ELSE 
385 LINE.NUM " Success=FALSE" *Master_Handle  PRT$ ^MasterXmitStatus @! 
386 LINE.NUM THEN 
387 LINE.NUM " " *MasterCommand  $MOVE 
0 JUMP ;
: 6_336
-12 JUMP ;
: 6_340
-13 JUMP ;
: 6_343

1 LINE.NUM
  " STATUS1" 
 
  ^indexStep @@ 
  *MasterCommand   FindSubString
  ^MasterCommandStringRcvd @! 
30 JUMP ;
: 6_345
1 LINE.NUM " " *StatusString  $MOVE 
2 LINE.NUM " Success=TRUE, ICDVersion=" *StatusString  $MOVE 
3 LINE.NUM *ICDVersion *StatusString $CAT 

4 LINE.NUM " , FWVersion=" *StatusString $CAT 

5 LINE.NUM *FWVersion *StatusString $CAT 

6 LINE.NUM " , SWVersion=" *StatusString $CAT 

7 LINE.NUM *SWVersion *StatusString $CAT 

9 LINE.NUM " , Timestamp=" *StatusString $CAT 

12 LINE.NUM  DATE@ DROP DROP *DateStringY  I>$ 
13 LINE.NUM *DateStringY *StatusString $CAT 

14 LINE.NUM " /" *StatusString $CAT 

15 LINE.NUM  DATE@ -ROT DROP DROP *DateStringMD  I>$ 
16 LINE.NUM *DateStringMD *StatusString $CAT 

17 LINE.NUM " /" *StatusString $CAT 

18 LINE.NUM  DATE@ DROP SWAP DROP *DateStringMD  I>$ 
19 LINE.NUM *DateStringMD *StatusString $CAT 

20 LINE.NUM " T" *StatusString $CAT 

21 LINE.NUM *TimeString  TIME>$ 
22 LINE.NUM *TimeString *StatusString $CAT 

24 LINE.NUM " , SystemUpTime=" *StatusString $CAT 

25 LINE.NUM  GetSystemTime 86400 / I>F 10 0 *ElapsedString  FF.R$ 
26 LINE.NUM *ElapsedString *StatusString $CAT 

29 LINE.NUM " , SiteString=" *StatusString $CAT 

30 LINE.NUM *SiteString *StatusString $CAT 

32 LINE.NUM " , HeartbeatDownTimer=" *StatusString $CAT 

33 LINE.NUM ^HeartTime @@ ^Heartbeat_Timer @@F F- 5 0 *ElapsedString  FF.R$ 
34 LINE.NUM *ElapsedString *StatusString $CAT 

36 LINE.NUM " , PriorHeartbeatTime=" *StatusString $CAT 

37 LINE.NUM ^HeartTime @@ ^PriorHeartbeatTime @@F F- 5 0 *ElapsedString  FF.R$ 
38 LINE.NUM *ElapsedString *StatusString $CAT 

40 LINE.NUM " , PriorStatusTime=" *StatusString $CAT 

41 LINE.NUM  GetSystemTime ^PriorStatusTime @@ - I>F 5 0 *ElapsedString  FF.R$ 
42 LINE.NUM *ElapsedString *StatusString $CAT 

44 LINE.NUM  GetSystemTime ^PriorStatusTime @! 
46 LINE.NUM " , Fault=FALSE" *StatusString $CAT 

47 LINE.NUM " , Error=FALSE" *StatusString $CAT 

49 LINE.NUM " , FenceBlueKeyStowed=" *StatusString $CAT 

50 LINE.NUM ~FenceKey @@I 0 = IF 
51 LINE.NUM " TRUE" *StatusString $CAT 

52 LINE.NUM ELSE 
53 LINE.NUM " FALSE" *StatusString $CAT 

54 LINE.NUM THEN 
55 LINE.NUM " , EnclABlueKeyStowed=" *StatusString $CAT 

56 LINE.NUM ~EnclosureAKey @@I 0 = IF 
57 LINE.NUM " TRUE" *StatusString $CAT 

58 LINE.NUM ELSE 
59 LINE.NUM " FALSE" *StatusString $CAT 

60 LINE.NUM THEN 
61 LINE.NUM " , EnclBBlueKeyStowed=" *StatusString $CAT 

62 LINE.NUM ~EnclosureBKey @@I 1 = IF 
63 LINE.NUM " FALSE" *StatusString $CAT 

64 LINE.NUM ELSE 
65 LINE.NUM " TRUE" *StatusString $CAT 

66 LINE.NUM THEN 
67 LINE.NUM " , EnclCBlueKeyStowed=" *StatusString $CAT 

68 LINE.NUM ~EnclosureCKey @@I 1 = IF 
69 LINE.NUM " FALSE" *StatusString $CAT 

70 LINE.NUM ELSE 
71 LINE.NUM " TRUE" *StatusString $CAT 

72 LINE.NUM THEN 
73 LINE.NUM " , EnclDBlueKeyStowed=" *StatusString $CAT 

74 LINE.NUM ~EnclosureDKey @@I 0 = IF 
75 LINE.NUM " TRUE" *StatusString $CAT 

76 LINE.NUM ELSE 
77 LINE.NUM " FALSE" *StatusString $CAT 

78 LINE.NUM THEN 
79 LINE.NUM " , KeyringStowed=" *StatusString $CAT 

80 LINE.NUM ~SiteStatusKey @@I 1 = IF 
81 LINE.NUM " TRUE" *StatusString $CAT 

82 LINE.NUM ELSE 
83 LINE.NUM " FALSE" *StatusString $CAT 

84 LINE.NUM THEN 
85 LINE.NUM " , ShutdownCommanded=" *StatusString $CAT 

86 LINE.NUM ~ShutdownStatusKey @@I 0 = IF 
87 LINE.NUM " FALSE" *StatusString $CAT 

88 LINE.NUM ELSE 
89 LINE.NUM " TRUE" *StatusString $CAT 

90 LINE.NUM THEN 
92 LINE.NUM " , MuteTestButton=" *StatusString $CAT 

93 LINE.NUM ~Mute_Test @@I 1 = IF 
94 LINE.NUM " TRUE" *StatusString $CAT 

95 LINE.NUM ELSE 
96 LINE.NUM " FALSE" *StatusString $CAT 

97 LINE.NUM THEN 
99 LINE.NUM *SiteString " LSC" $= IF 
100 LINE.NUM ~Fan_Sw_2 @@I LNOT  ^fake_Fan_Sw_2 @! 
101 LINE.NUM ELSE 
102 LINE.NUM ~Fan_Sw_2 @@I ^fake_Fan_Sw_2 @! 
103 LINE.NUM THEN 
105 LINE.NUM " , FansSwitch=" *StatusString $CAT 

106 LINE.NUM *FanSwitchState *StatusString $CAT 

200 LINE.NUM " , TemperatureServoState=" *StatusString $CAT 

201 LINE.NUM *TempServoState *StatusString $CAT 

204 LINE.NUM *StatusString *Master_Handle  PRT$ ^MasterXmitStatus @! 
205 LINE.NUM " Statux 1 Sent" *MasterCommand  $MOVE 
14 JUMP ;
: 6_370

1 LINE.NUM
  ^Heartbeat_Timer @@F 
  ^PriorHeartbeatTime F@!   

2 LINE.NUM
  ^Heartbeat_Timer   StopTimer

3 LINE.NUM
  ^HeartTime @@ 
  ^Heartbeat_Timer   SetTimer

4 LINE.NUM
  ^Heartbeat_Timer   StartTimer
7 JUMP ;
: 6_383

1 LINE.NUM
  *Master_Handle   STREAM.CLEAR.BUF
-8 JUMP ;
: 6_406
2 LINE.NUM *FaultString  $LEN 1 < IF 
3 LINE.NUM " Success=FALSE" *StatusString  $MOVE 
4 LINE.NUM ELSE 
5 LINE.NUM " Success=TRUE" *StatusString  $MOVE 
6 LINE.NUM *FaultString *StatusString $CAT 

7 LINE.NUM THEN 
10 LINE.NUM *StatusString *Master_Handle  PRT$ ^MasterXmitStatus @! 
11 LINE.NUM " " *MasterCommand  $MOVE 
1 JUMP ;
: 6_408

1 LINE.NUM
  " GET_FAULTS" 
 
  ^indexStep @@ 
  *MasterCommand   FindSubString
  ^MasterCommandStringRcvd @! 
27 JUMP ;
: 6_409
-20 JUMP ;
: 6_413
3 LINE.NUM " Success=FALSE" *StatusString  $MOVE 
300 LINE.NUM *StatusString *Master_Handle  PRT$ ^MasterXmitStatus @! 
301 LINE.NUM " " *MasterCommand  $MOVE 
1 JUMP ;
: 6_415

1 LINE.NUM
  " GET_ERRORS" 
 
  ^indexStep @@ 
  *MasterCommand   FindSubString
  ^MasterCommandStringRcvd @! 
25 JUMP ;
: 6_416
-23 JUMP ;
: 6_421
1 LINE.NUM *MasterCommand  $>Upper 
3 LINE.NUM " ," ^indexStep @@ *MasterCommand  FindSubString ^Position1 @! 
4 LINE.NUM *MasterCommand ^Position1 @@ 1 +  50 *Pstring  $SUB 
6 LINE.NUM " ," 0 *Pstring  FindSubString ^Position2 @! 
7 LINE.NUM *Pstring 0 ^Position2 @@ *SiteString  $SUB 
8 LINE.NUM *Pstring ^Position2 @@ 1 +  50 *Pstring  $SUB 
10 LINE.NUM " ," 0 *Pstring  FindSubString ^Position3 @! 
11 LINE.NUM *Pstring 0 ^Position3 @@ *DateTimeString  $SUB 
12 LINE.NUM *Pstring ^Position3 @@ 1 +  50 *Pstring  $SUB 
14 LINE.NUM " ," 0 *Pstring  FindSubString ^Position4 @! 
15 LINE.NUM *Pstring 0 ^Position4 @@ *TemperatureString  $SUB 
16 LINE.NUM *Pstring ^Position4 @@ 1 +  50 *Pstring  $SUB 
18 LINE.NUM " ," 0 *Pstring  FindSubString ^Position5 @! 
19 LINE.NUM *Pstring 0 ^Position5 @@ *DewString  $SUB 
20 LINE.NUM *Pstring ^Position5 @@ 1 +  50 *Pstring  $SUB 
22 LINE.NUM " ," 0 *Pstring  FindSubString ^Position6 @! 
23 LINE.NUM *Pstring 0 ^Position6 @@ *HumidityString  $SUB 
24 LINE.NUM *Pstring ^Position6 @@ 1 +  50 *Pstring  $SUB 
26 LINE.NUM *Pstring " TRUE" $= IF 
27 LINE.NUM 1 ^OpenFlag @! 
28 LINE.NUM ELSE 
29 LINE.NUM 0 ^OpenFlag @! 
30 LINE.NUM THEN 
32 LINE.NUM 1 ^ValidTemp @! 
35 LINE.NUM " Success=TRUE" *Master_Handle  PRT$ ^MasterXmitStatus @! 
36 LINE.NUM " " *MasterCommand  $MOVE 
-12 JUMP ;
: 6_431

1 LINE.NUM
  " RESET" 
 
  ^indexStep @@ 
  *MasterCommand   FindSubString
  ^MasterCommandStringRcvd @! 
23 JUMP ;
: 6_433
3 LINE.NUM " Success=TRUE" *StatusString  $MOVE 
5 LINE.NUM *StatusString *Master_Handle  PRT$ ^MasterXmitStatus @! 
6 LINE.NUM " " *MasterCommand  $MOVE 
0 JUMP ;
: 6_439

1 LINE.NUM
  1.0    FDELAY

2 LINE.NUM
  &Master_comms   STOP.T

3 LINE.NUM
  500    DELAY

4 LINE.NUM
  &Powerup   START.T
  ^AdjustTach I@! 
24 JUMP ;
: 6_459
1 LINE.NUM " " *StatusString  $MOVE 
6 LINE.NUM " Success=TRUE" *StatusString  $MOVE 
7 LINE.NUM *StatusString *Master_Handle  PRT$ ^MasterXmitStatus @! 
8 LINE.NUM " Depricated Status" *MasterCommand  $MOVE 
1 JUMP ;
: 6_461

1 LINE.NUM
  " STATUS" 
 
  ^indexStep @@ 
  *MasterCommand   FindSubString
  ^MasterCommandStringRcvd @! 
20 JUMP ;
: 6_465
2 JUMP ;
: 6_468
1 LINE.NUM " " *StatusString  $MOVE 
2 LINE.NUM " Success=TRUE" *StatusString  $MOVE 
4 LINE.NUM ~HVAC_Fan_Voltage @@ 10 I>F F< IF 
5 LINE.NUM " , HvacFanOn=FALSE" *StatusString $CAT 

6 LINE.NUM ELSE 
7 LINE.NUM " , HvacFanOn=TRUE" *StatusString $CAT 

8 LINE.NUM THEN 
9 LINE.NUM ~HVAC_Cool_Voltage @@ 10 I>F F< IF 
10 LINE.NUM " , HvacCooling=FALSE" *StatusString $CAT 

11 LINE.NUM ELSE 
12 LINE.NUM " , HvacCooling=TRUE" *StatusString $CAT 

13 LINE.NUM THEN 
14 LINE.NUM ~HVAC_Heat_Voltage @@ 10 I>F F< IF 
15 LINE.NUM " , HvacHeating=FALSE" *StatusString $CAT 

16 LINE.NUM ELSE 
17 LINE.NUM " , HvacHeating=TRUE" *StatusString $CAT 

18 LINE.NUM THEN 
20 LINE.NUM ^OpenFlag @@ 0 = IF 
21 LINE.NUM " , OpenReported=FALSE" *StatusString $CAT 

22 LINE.NUM ELSE 
23 LINE.NUM " , OpenReported=TRUE" *StatusString $CAT 

24 LINE.NUM THEN 
26 LINE.NUM ~Ladder_stowed @@I 0 = IF 
27 LINE.NUM " , LadderStowed=FALSE" *StatusString $CAT 

28 LINE.NUM ELSE 
29 LINE.NUM " , LadderStowed=TRUE" *StatusString $CAT 

30 LINE.NUM THEN 
32 LINE.NUM ~SSBdoorSwitch @@I 0 = IF 
33 LINE.NUM " , EntryDoorClosed=FALSE" *StatusString $CAT 

34 LINE.NUM ELSE 
35 LINE.NUM " , EntryDoorClosed=TRUE" *StatusString $CAT 

36 LINE.NUM THEN 
38 LINE.NUM ~CompressorDoorSwitch @@I 1 = IF 
39 LINE.NUM " , CompressorCoverClosed=TRUE" *StatusString $CAT 

40 LINE.NUM ELSE 
41 LINE.NUM " , CompressorCoverClosed=FALSE" *StatusString $CAT 

42 LINE.NUM THEN 
44 LINE.NUM ~SmokeAlarmOK @@I 1 = IF 
45 LINE.NUM " , SmokeAlarmOK=TRUE" *StatusString $CAT 

46 LINE.NUM ELSE 
47 LINE.NUM " , SmokeAlarmOK=FALSE" *StatusString $CAT 

48 LINE.NUM THEN 
51 LINE.NUM ~SmokeAlert @@I 1 = IF 
52 LINE.NUM " , SmokeAlert=TRUE" *StatusString $CAT 

53 LINE.NUM ELSE 
54 LINE.NUM " , SmokeAlert=FALSE" *StatusString $CAT 

55 LINE.NUM THEN 
57 LINE.NUM ~HighTempAlert @@I 1 = IF 
58 LINE.NUM " , HighTempAlert=TRUE" *StatusString $CAT 

59 LINE.NUM ELSE 
60 LINE.NUM " , HighTempAlert=FALSE" *StatusString $CAT 

61 LINE.NUM THEN 
64 LINE.NUM ~Acp_Panel_Closed @@I IF 
65 LINE.NUM " , AcpPanelClosed=TRUE" *StatusString $CAT 

66 LINE.NUM ELSE 
67 LINE.NUM " , AcpPanelClosed=FALSE" *StatusString $CAT 

68 LINE.NUM THEN 
70 LINE.NUM " , UtilityVac=" *StatusString $CAT 

71 LINE.NUM ~Utility_VAC @@ 5 1 *EnviroTemp  FF.R$ 
72 LINE.NUM *EnviroTemp *StatusString $CAT 

74 LINE.NUM " , Bard24Vac=" *StatusString $CAT 

75 LINE.NUM ~HVAC_24VAC @@ 5 1 *EnviroTemp  FF.R$ 
76 LINE.NUM *EnviroTemp *StatusString $CAT 

78 LINE.NUM " , IncomingTemp=" *StatusString $CAT 

79 LINE.NUM ~SSB_Incoming_Air_Temp @@ 5 1 *EnviroTemp  FF.R$ 
80 LINE.NUM *EnviroTemp *StatusString $CAT 

81 LINE.NUM " , InternalTemp=" *StatusString $CAT 

82 LINE.NUM ~SSB_Internal_Temp @@ 5 1 *EnviroTemp  FF.R$ 
83 LINE.NUM *EnviroTemp *StatusString $CAT 

84 LINE.NUM " , ExternalTemp=" *StatusString $CAT 

85 LINE.NUM *TemperatureString  $>F 5 1 *EnviroTemp  FF.R$ 
86 LINE.NUM *EnviroTemp *StatusString $CAT 

87 LINE.NUM " , InternalHumidity=" *StatusString $CAT 

88 LINE.NUM ~SSB_Internal_Humidity @@ 4 1 *EnviroTemp  FF.R$ 
89 LINE.NUM *EnviroTemp *StatusString $CAT 

90 LINE.NUM " , AcpPanelTemp=" *StatusString $CAT 

91 LINE.NUM ~SSB_Panel_Temp @@ 5 1 *EnviroTemp  FF.R$ 
92 LINE.NUM *EnviroTemp *StatusString $CAT 

93 LINE.NUM " , ItRackBackTemp=" *StatusString $CAT 

94 LINE.NUM ~IT_Rack_Back_Temp @@ 5 1 *EnviroTemp  FF.R$ 
95 LINE.NUM *EnviroTemp *StatusString $CAT 

96 LINE.NUM " , OutgoingTemp=" *StatusString $CAT 

97 LINE.NUM ~SSB_Outgoing_Temp @@ 5 1 *EnviroTemp  FF.R$ 
98 LINE.NUM *EnviroTemp *StatusString $CAT 

100 LINE.NUM " , AcpPanelTach=" *StatusString $CAT 

101 LINE.NUM ~ACP_Fan_Tach @@ 1.13999999e+000 F/ 4 0 *EnviroTemp  FF.R$ 
102 LINE.NUM *EnviroTemp *StatusString $CAT 

104 LINE.NUM 0 I>F ^Total_Inflow @! 
106 LINE.NUM ~SSB_Fan_M24_Tach @@ ^AdjustTach @! 
107 LINE.NUM ^AdjustTach @@ 20 I>F F- ^AdjustTach @! 
108 LINE.NUM ^AdjustTach @@ 3.57100010e+000 F* ^AdjustTach @! 
109 LINE.NUM ^AdjustTach @@ 0 I>F F< IF 
110 LINE.NUM 0 I>F ^AdjustTach @! 
111 LINE.NUM THEN 
112 LINE.NUM ^Total_Inflow @@ ^AdjustTach @@ F+ ^Total_Inflow @! 
113 LINE.NUM " , InletFan1Tach=" *StatusString $CAT 

114 LINE.NUM ^AdjustTach @@ 4 0 *EnviroTemp  FF.R$ 
115 LINE.NUM *EnviroTemp *StatusString $CAT 

117 LINE.NUM ~SSB_Fan_M27_Tach @@ ^AdjustTach @! 
118 LINE.NUM ^AdjustTach @@ 20 I>F F- ^AdjustTach @! 
119 LINE.NUM ^AdjustTach @@ 3.70300007e+000 F* ^AdjustTach @! 
120 LINE.NUM ^AdjustTach @@ 0 I>F F< IF 
121 LINE.NUM 0 I>F ^AdjustTach @! 
122 LINE.NUM THEN 
123 LINE.NUM ^Total_Inflow @@ ^AdjustTach @@ F+ ^Total_Inflow @! 
124 LINE.NUM " , InletFan2Tach=" *StatusString $CAT 

125 LINE.NUM ^AdjustTach @@ 4 0 *EnviroTemp  FF.R$ 
126 LINE.NUM *EnviroTemp *StatusString $CAT 

129 LINE.NUM ~SSB_Fan_M32_Tach @@ ^AdjustTach @! 
130 LINE.NUM ^AdjustTach @@ 20 I>F F- ^AdjustTach @! 
131 LINE.NUM ^AdjustTach @@ 3.57100010e+000 F* ^AdjustTach @! 
132 LINE.NUM ^AdjustTach @@ 0 I>F F< IF 
133 LINE.NUM 0 I>F ^AdjustTach @! 
134 LINE.NUM THEN 
135 LINE.NUM ^Total_Inflow @@ ^AdjustTach @@ F+ ^Total_Inflow @! 
136 LINE.NUM " , InletFan3Tach=" *StatusString $CAT 

137 LINE.NUM ^AdjustTach @@ 4 0 *EnviroTemp  FF.R$ 
138 LINE.NUM *EnviroTemp *StatusString $CAT 

140 LINE.NUM ~SSB_Fan_M35_Tach @@ ^AdjustTach @! 
141 LINE.NUM ^AdjustTach @@ 20 I>F F- ^AdjustTach @! 
142 LINE.NUM ^AdjustTach @@ 3.84599996e+000 F* ^AdjustTach @! 
143 LINE.NUM ^AdjustTach @@ 0 I>F F< IF 
144 LINE.NUM 0 I>F ^AdjustTach @! 
145 LINE.NUM THEN 
146 LINE.NUM ^Total_Inflow @@ ^AdjustTach @@ F+ ^Total_Inflow @! 
147 LINE.NUM " , InletFan4Tach=" *StatusString $CAT 

148 LINE.NUM ^AdjustTach @@ 4 0 *EnviroTemp  FF.R$ 
149 LINE.NUM *EnviroTemp *StatusString $CAT 

151 LINE.NUM " , TotalInflow=" *StatusString $CAT 

152 LINE.NUM ^Total_Inflow @@ 4.00000000e+000 F/ 4 0 *EnviroTemp  FF.R$ 
153 LINE.NUM *EnviroTemp *StatusString $CAT 

155 LINE.NUM " , OutletTach=" *StatusString $CAT 

156 LINE.NUM ~SSB_Exhaust_Fan_Speed @@ 10 I>F F* 4 0 *EnviroTemp  FF.R$ 
157 LINE.NUM *EnviroTemp *StatusString $CAT 

159 LINE.NUM " , UtilityCurrent=" *StatusString $CAT 

160 LINE.NUM ~Utility_Current @@ 5 1 *EnviroTemp  FF.R$ 
161 LINE.NUM *EnviroTemp *StatusString $CAT 

163 LINE.NUM " , DeltaTemp=" *StatusString $CAT 

164 LINE.NUM ^delta_T @@ 5 1 *EnviroTemp  FF.R$ 
165 LINE.NUM *EnviroTemp *StatusString $CAT 

167 LINE.NUM " , AvgMidSSBTemp=" *StatusString $CAT 

168 LINE.NUM ^avg_T @@ 5 1 *EnviroTemp  FF.R$ 
169 LINE.NUM *EnviroTemp *StatusString $CAT 

171 LINE.NUM " , FUPS_LINE_OK=" *StatusString $CAT 

172 LINE.NUM ~FUPS_Line_OK @@I IF 
173 LINE.NUM " TRUE" *EnviroTemp  $MOVE 
174 LINE.NUM ELSE 
175 LINE.NUM " FALSE" *EnviroTemp  $MOVE 
176 LINE.NUM THEN 
177 LINE.NUM *EnviroTemp *StatusString $CAT 

179 LINE.NUM " , FUPS_OK=" *StatusString $CAT 

180 LINE.NUM ~FUPS_BatteryNormal @@I ~FUPS_ON_OK @@I LAND  ~FUPS_Normal_OnInverter @@I LAND  IF 
181 LINE.NUM " TRUE" *EnviroTemp  $MOVE 
182 LINE.NUM ELSE 
183 LINE.NUM " FALSE" *EnviroTemp  $MOVE 
184 LINE.NUM THEN 
185 LINE.NUM *EnviroTemp *StatusString $CAT 

186 LINE.NUM *StatusString  $LEN ^StringLenProbe @! 
188 LINE.NUM "  DUPS_LINE_OK=" *StatusString $CAT 

189 LINE.NUM ~DUPS_Line_OK @@I IF 
190 LINE.NUM " TRUE" *EnviroTemp  $MOVE 
191 LINE.NUM ELSE 
192 LINE.NUM " FALSE" *EnviroTemp  $MOVE 
193 LINE.NUM THEN 
194 LINE.NUM *EnviroTemp *StatusString $CAT 

196 LINE.NUM " , DUPS_OK=" *StatusString $CAT 

197 LINE.NUM ~DUPS_BatteryNormal @@I ~DUPS_ON_OK @@I LAND  ~DUPS_Normal_OnInverter @@I LAND  IF 
198 LINE.NUM " TRUE" *EnviroTemp  $MOVE 
199 LINE.NUM ELSE 
200 LINE.NUM " FALSE" *EnviroTemp  $MOVE 
201 LINE.NUM THEN 
203 LINE.NUM *EnviroTemp *StatusString $CAT 

205 LINE.NUM " , CompressedAirPressure=" *StatusString $CAT 

206 LINE.NUM ~AirPressure @@ 7 4 *EnviroTemp  FF.R$ 
207 LINE.NUM *EnviroTemp *StatusString $CAT 

209 LINE.NUM " , AirCompressorCurrent=" *StatusString $CAT 

210 LINE.NUM ~AirCompressor_Current @@ 6 3 *EnviroTemp  FF.R$ 
211 LINE.NUM *EnviroTemp *StatusString $CAT 

216 LINE.NUM *StatusString *Master_Handle  PRT$ ^MasterXmitStatus @! 
217 LINE.NUM " Statux 2 Sent" *MasterCommand  $MOVE 
-2 JUMP ;
: 6_470

1 LINE.NUM
  " STATUS2" 
 
  ^indexStep @@ 
  *MasterCommand   FindSubString
  ^MasterCommandStringRcvd @! 
18 JUMP ;
: 6_471
-33 JUMP ;
: 6_7
FALSE

1 LINE.NUM
  ^MasterCommEstablished @@ 
  0    =
LOR

2 LINE.NUM
  ^MasterCommEstablished @@ 
  -47    =
LOR
IF -28 ELSE -38 THEN JUMP ;
: 6_14
FALSE

1 LINE.NUM
  ^ListeningForMaster @@ 
  0    =
LOR

2 LINE.NUM
  ^ListeningForMaster @@ 
  -47    =
LOR
IF -38 ELSE -37 THEN JUMP ;
: 6_17
TRUE

1 LINE.NUM
  ^Master_Handle_CharNumWaiting @@ 
  0    <
LAND
IF 1 ELSE -35 THEN JUMP ;
: 6_19
TRUE

1 LINE.NUM
  ^Master_Handle_CharNumWaiting @@ 
  0    >
LAND
IF -29 ELSE 5 THEN JUMP ;
: 6_25
FALSE

1 LINE.NUM
  ^Master_Handle_CharNumWaiting @@ 
  -37    =
LOR

2 LINE.NUM
  ^Master_Handle_CharNumWaiting @@ 
  -39    =
LOR
IF -37 ELSE -36 THEN JUMP ;
: 6_35
TRUE

1 LINE.NUM
  ^MasterCommandStringRcvd @@ 
  0    =
LAND
IF -23 ELSE 6 THEN JUMP ;
: 6_39
FALSE

1 LINE.NUM
  ^MasterCommandStringRcvd @@ 
  -37    =
LOR

2 LINE.NUM
  ^MasterCommandStringRcvd @@ 
  -39    =
LOR
IF -36 ELSE -35 THEN JUMP ;
: 6_66
TRUE

1 LINE.NUM
  ^Master_Handle_CharNumWaiting @@ 
  5    <
LAND
IF -36 ELSE -38 THEN JUMP ;
: 6_94
TRUE

1 LINE.NUM
  ^Socket_Timer   T0=
LAND
IF -35 ELSE -7 THEN JUMP ;
: 6_102
TRUE

1 LINE.NUM
  *Master_Handle   ?OPEN 0>
LAND
IF -2 ELSE -41 THEN JUMP ;
: 6_342
FALSE

1 LINE.NUM
  ^MasterCommandStringRcvd @@ 
  -1    >
LOR
IF -29 ELSE -31 THEN JUMP ;
: 6_346
TRUE

1 LINE.NUM
  ^MasterCommandStringRcvd @@ 
  -1    >
LAND
IF -31 ELSE -14 THEN JUMP ;
: 6_381
TRUE

1 LINE.NUM
  ^MasterCommandStringRcvd @@ 
  0    <=
LAND
IF -7 ELSE -30 THEN JUMP ;
: 6_405
TRUE

1 LINE.NUM
  ^MasterCommandStringRcvd @@ 
  -1    >
LAND
IF -30 ELSE -26 THEN JUMP ;
: 6_412
TRUE

1 LINE.NUM
  ^MasterCommandStringRcvd @@ 
  -1    >
LAND
IF -28 ELSE -24 THEN JUMP ;
: 6_434
TRUE

1 LINE.NUM
  ^MasterCommandStringRcvd @@ 
  -1    >
LAND
IF -24 ELSE -39 THEN JUMP ;
: 6_458
TRUE

1 LINE.NUM
  ^MasterCommandStringRcvd @@ 
  -1    >
LAND
IF -23 ELSE -32 THEN JUMP ;
: 6_467
TRUE

1 LINE.NUM
  ^MasterCommandStringRcvd @@ 
  -1    >
LAND
IF -21 ELSE -23 THEN JUMP ;
T: T6
DUMMY
6_0
6_5
6_9
6_12
6_15
6_20
6_22
6_29
6_34
6_41
6_60
6_91
6_99
6_106
6_312
6_335
6_336
6_340
6_343
6_345
6_370
6_383
6_406
6_408
6_409
6_413
6_415
6_416
6_421
6_431
6_433
6_439
6_459
6_461
6_465
6_468
6_470
6_471
6_7
6_14
6_17
6_19
6_25
6_35
6_39
6_66
6_94
6_102
6_342
6_346
6_381
6_405
6_412
6_434
6_458
6_467
T;
&Master_comms ' T6 SETTASK
