: 16_0
8 JUMP ;
: 16_2

1 LINE.NUM
  %A_1mFPAC 
  ^FPAC_scratchpad   $F0D80000 SWAP IO.MAP.READ64
  ^GetScratchBits @! 
20 JUMP ;
: 16_13

1 LINE.NUM
  ~DO_DomeLights   OFF

2 LINE.NUM
  ^WTlightSwitchState @@ 
  ^WTswitchOldState @!   
3 JUMP ;
: 16_16

1 LINE.NUM
  ~DO_DomeLights   ON

2 LINE.NUM
  ^WTlightSwitchState @@ 
  ^WTswitchOldState @!   
2 JUMP ;
: 16_25

1 LINE.NUM
  %A_1mFPAC   ENABLE
0 JUMP ;
: 16_27

1 LINE.NUM
  250    DELAY
15 JUMP ;
: 16_28
-2 JUMP ;
: 16_35

1 LINE.NUM
  ^WTlightSwitchState   TRUE@!
9 JUMP ;
: 16_36

1 LINE.NUM
  ^WTlightSwitchState   FALSE@!
8 JUMP ;
: 16_41

1 LINE.NUM
  ^WTswitchOldState   FALSE@!

2 LINE.NUM
  ^LightToggleOld   FALSE@!
-5 JUMP ;
: 16_69
-6 JUMP ;
: 16_70

1 LINE.NUM
  ~DO_DomeLights   ON

2 LINE.NUM
  ^LightToggle @@ 
  ^LightToggleOld @!   
-2 JUMP ;
: 16_71

1 LINE.NUM
  ~DO_DomeLights   OFF

2 LINE.NUM
  ^LightToggle @@ 
  ^LightToggleOld @!   
-3 JUMP ;
: 16_75

1 LINE.NUM
  ~DO_DomeLights   ON
-9 JUMP ;
: 16_83
1 LINE.NUM %A_1mFPAC 0 *s_LightSW  IO.SP.$READ DROP  
0 JUMP ;
: 16_1
TRUE

1 LINE.NUM
  *s_LightSW
 
  " true" 
   $=
LAND
IF -9 ELSE -8 THEN JUMP ;
: 16_23
TRUE

1 LINE.NUM
  %A_1mFPAC    ENABLE@
LAND
IF -3 ELSE -13 THEN JUMP ;
: 16_45
TRUE

1 LINE.NUM
  ^WTlightSwitchState @@ 
  ^WTswitchOldState @@   <>
LAND
IF 0 ELSE 1 THEN JUMP ;
: 16_49
TRUE

1 LINE.NUM
  ~DO_DomeLights   ?ON
LAND
IF -17 ELSE -16 THEN JUMP ;
: 16_62
TRUE

1 LINE.NUM
  ^LightToggle @@ 
  ^LightToggleOld @@   <>
LAND
IF 0 ELSE -10 THEN JUMP ;
: 16_68
TRUE

1 LINE.NUM
  ~DO_DomeLights   ?ON
LAND
IF -9 ELSE -10 THEN JUMP ;
: 16_76
TRUE

1 LINE.NUM
  ~DI_SW_WhiteLights   ?OFF
LAND
IF -9 ELSE -6 THEN JUMP ;
T: T16
DUMMY
16_0
16_2
16_13
16_16
16_25
16_27
16_28
16_35
16_36
16_41
16_69
16_70
16_71
16_75
16_83
16_1
16_23
16_45
16_49
16_62
16_68
16_76
T;
&White_Lights ' T16 SETTASK
